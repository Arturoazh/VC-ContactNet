<<<<<<< HEAD
!function(){"use strict";angular.module("virtual-center",["ui.router","ngSanitize","ngAnimate","ngAria","ngMaterial"])}(),function(){"use strict";function t(t,n){t.theme("default").primaryPalette("grey").accentPalette("blue").warnPalette("red"),n.icon("add","assets/icons/add.svg").icon("menu","assets/icons/menu.svg").icon("more_vert","assets/icons/more_vert.svg").icon("contactnets","assets/icons/contactnets.svg").icon("channels","assets/icons/channels.svg").icon("rules","assets/icons/rules.svg").icon("mail","assets/icons/mail.svg").icon("message","assets/icons/message.svg").icon("phone","assets/icons/phone.svg").icon("shape","assets/icons/shape.svg").icon("insert","assets/icons/insert-drive-file.svg").icon("mode-edit","assets/icons/mode-edit.svg")}angular.module("virtual-center").config(t),t.$inject=["$mdThemingProvider","$mdIconProvider"]}(),function(){"use strict";function t(t,n,e,c,o,r,s){function a(){var t=arguments;return function(){c(t[0]).toggle()}}n.toggleLeft=a("left"),n.menu={},n.cnNavigate=r,n.isOpenLeft=function(){return c("left").isOpen()},o.get().then(function(){console.log("arguments",arguments[0]),n.menu=arguments[0]}),t.$on("$stateChangeSuccess",function(){switch(arguments[1].url){case"/contactnets":n.selectedIndex=0;break;case"/channels":n.selectedIndex=1;break;case"/rules":n.selectedIndex=2}})}angular.module("virtual-center").controller("appController",t),t.$inject=["$rootScope","$scope","$timeout","$mdSidenav","$cnMenu","$cnNavigate","$location"]}(),function(){"use strict";function t(t,n){t.state("contactnets",{url:"/contactnets",templateUrl:"modules/contactNets/contactNets.html",controller:"contactNetsController"}).state("channels",{url:"/channels",templateUrl:"modules/channels/channels.html",controller:"channelsController"}).state("rules",{url:"/rules",templateUrl:"modules/rules/rules.html",controller:"rulesController"}),n.otherwise("/contactnets")}angular.module("virtual-center").config(t),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t,n){t.contactNetsService=n,n.get().then(function(){n.contactNets=arguments[0],n.contactNets=[]})}angular.module("virtual-center").controller("channelsController",t),t.$inject=["$scope","$cnContactNets"]}(),function(){"use strict";function t(t,n){t.contactNetsService=n,n.get().then(function(){n.contactNets=arguments[0]})}angular.module("virtual-center").controller("contactNetsController",t),t.$inject=["$scope","$cnContactNets"]}(),function(){"use strict";function t(t,n){t.contactNetsService=n,n.get().then(function(){n.contactNets=arguments[0],n.contactNets=[]})}angular.module("virtual-center").controller("rulesController",t),t.$inject=["$scope","$cnContactNets"]}(),function(){"use strict";function t(t,n){function e(){var e=t.defer();return n.get("listContactNets").then(function(){e.resolve(arguments[0])}),e.promise}function c(){var e=t.defer();return n.get("contactNetId").then(function(){e.resolve(arguments[0])}),e.promise}var o=this;return o.contactNets=[],o.get=e,o.getById=c,o}angular.module("virtual-center").service("$cnContactNets",t),t.$inject=["$q","$cnMocks"]}(),function(){"use strict";function t(t,n){function e(){var e=t.defer();return o?e.resolve(o):n.getById("menu","MENU").then(function(){o=arguments[0],e.resolve(o)}),e.promise}var c=this,o=!1;return c.get=e,c}angular.module("virtual-center").service("$cnMenu",t),t.$inject=["$q","$cnMocks"]}(),function(){"use strict";function t(t){function n(n,e,c,o){function r(){console.log("lasldglasdg",t.contactNets),t.contactNets.splice(0,0,{id:s(1,50),description:"Nuevo ContactNet",queueType:"BOTH",isACD:1,openCard:!0,modificable:!0,channels:{1:1,2:2,3:3}}),t.getById().then(function(){t.contactNets[0].contactNetInfo=arguments[0]})}function s(){return Math.floor(Math.random()*arguments[1])+arguments[0]}e.on("click",r)}var e={restrict:"EA",scope:{},link:n};return e}angular.module("virtual-center").directive("cnCreateContactNet",t),t.$inject=["$cnContactNets"]}(),function(){"use strict";function t(t){function n(n,e,c,o){function r(){t.path(c.cnNavigate),n.$apply()}e.css("cursor","pointer"),e.on("click",r)}var e={restrict:"A",scope:{cnNavigate:"@"},link:n};return e}function n(t){function n(){arguments[0]&&t.path(arguments[0])}var e=this;e.path=n}angular.module("virtual-center").directive("cnNavigate",t).service("$cnNavigate",n),t.$inject=["$cnNavigate"],n.$inject=["$location"]}(),function(){"use strict";function t(t){function n(n,e,c,o){function r(){if("button"!==arguments[0].target.localName){var e=JSON.parse(c.cncontactnetinfo);angular.forEach(t.contactNets,function(){var c=arguments;c[0].id==e.id&&(t.contactNets[c[1]].contactNetInfo?(t.contactNets[c[1]].contactNetInfo=null,t.contactNets[c[1]].openCard=!t.contactNets[c[1]].openCard):(t.contactNets[c[1]].openCard=!t.contactNets[c[1]].openCard,t.getById().then(function(){console.log(arguments[0]),t.contactNets[c[1]].contactNetInfo=arguments[0]})),n.$apply())})}}e.on("click",r)}var e={restrict:"EA",scope:{},link:n};return e}angular.module("virtual-center").directive("cnOpenContactNets",t),t.$inject=["$cnContactNets"]}(),function(){"use strict";function t(t,n,e){function c(){var t=n.defer(),c=arguments;return e(function(){var n=[];angular.forEach(u.bbdd[c[0]],function(){n.push(arguments[0])}),t.resolve(n)},s(200,500)),t.promise}function o(){var t=n.defer(),c=arguments;return e(function(){t.resolve(u.bbdd[c[0]][c[1]]||!1)},s(200,500)),t.promise}function r(){var t=n.defer(),c=arguments;return e(function(){if(void 0===c[2]){var n=s(1e3,9999);c[1].id=n,t.resolve(u.bbdd[c[0]][n]=c[1])}else t.resolve(u.bbdd[c[0]][c[2]]=c[1])},s(300,500)),t.promise}function s(){return Math.floor(Math.random()*arguments[1])+arguments[0]}function a(){for(var n=0;n<i.length;n++)!function(n){var e=arguments;t.get("modules/core/services/mocks/json/"+e[0]+".json").success(function(){u.bbdd[e[0]]=arguments[0]})}(i[n])}var i=["menu","listContactNets","contactNetId","channels","routing"],u=this;return u.bbdd={},u.get=c,u.getById=o,u.set=r,a(),u}angular.module("virtual-center").service("$cnMocks",t),t.$inject=["$http","$q","$timeout"]}(),function(){"use strict";function t(t){function n(t,n,e,c){}function e(t){console.log(t)}var c={restrict:"EA",scope:!1,link:n,templateUrl:"modules/contactNets/directives/cnContactNetChatCardChannelConfiguration/cnContactNetChatCardChannelConfiguration.html",controller:e};return e.$inject=["$scope"],c}angular.module("virtual-center").directive("cnContactNetChatCardChannelConfiguration",t),t.$inject=["$cnContactNets"]}(),function(){"use strict";function t(t){function n(t,n,e,c){}function e(t){console.log(t)}var c={restrict:"EA",scope:!1,link:n,templateUrl:"modules/contactNets/directives/cnContactNetVoiceCardChannelConfiguration/cnContactNetVoiceCardChannelConfiguration.html",controller:e};return e.$inject=["$scope"],c}angular.module("virtual-center").directive("cnContactNetVoiceCardChannelConfiguration",t),t.$inject=["$cnContactNets"]}();
=======
!function(){"use strict";angular.module("virtual-center",["ui.router","ngSanitize","ngAnimate","ngAria","ngMaterial"])}(),function(){"use strict";function e(e,t){e.theme("default").primaryPalette("grey").accentPalette("blue").warnPalette("red"),t.icon("add","assets/icons/add.svg").icon("arrow_downward","assets/icons/arrow_downward.svg").icon("arrow_upward","assets/icons/arrow_upward.svg").icon("menu","assets/icons/menu.svg").icon("more_vert","assets/icons/more_vert.svg").icon("contactnets","assets/icons/contactnets.svg").icon("channels","assets/icons/channels.svg").icon("rules","assets/icons/rules.svg").icon("mail","assets/icons/mail.svg").icon("message","assets/icons/message.svg").icon("phone","assets/icons/phone.svg").icon("shape","assets/icons/shape.svg").icon("insert","assets/icons/insert-drive-file.svg").icon("mode-edit","assets/icons/mode-edit.svg")}angular.module("virtual-center").config(e),e.$inject=["$mdThemingProvider","$mdIconProvider"]}(),function(){"use strict";function e(e,t,n,r,c,o,a){function s(){var e=arguments;return function(){r(e[0]).toggle()}}t.toggleLeft=s("left"),t.menu={},t.cnNavigate=o,e.addNew=function(){},t.isOpenLeft=function(){return r("left").isOpen()},c.get().then(function(){console.log("arguments",arguments[0]),t.menu=arguments[0]}),e.$on("$stateChangeSuccess",function(){switch(arguments[1].url){case"/contactnets":t.selectedIndex=0;break;case"/channels":t.selectedIndex=1;break;case"/rules":t.selectedIndex=2}})}angular.module("virtual-center").controller("appController",e),e.$inject=["$rootScope","$scope","$timeout","$mdSidenav","$cnMenu","$cnNavigate","$location"]}(),function(){"use strict";function e(e,t){e.state("contactnets",{url:"/contactnets",templateUrl:"modules/contactNets/contactNets.html",controller:"contactNetsController"}).state("channels",{url:"/channels",templateUrl:"modules/channels/channels.html",controller:"channelsController"}).state("rules",{url:"/rules",templateUrl:"modules/rules/rules.html",controller:"rulesController"}),t.otherwise("/contactnets")}angular.module("virtual-center").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e,t){e.contactNetsService=t,t.get().then(function(){t.contactNets=arguments[0],t.contactNets=[]})}angular.module("virtual-center").controller("channelsController",e),e.$inject=["$scope","$cnContactNets"]}(),function(){"use strict";function e(e,t){e.contactNetsService=t,t.get().then(function(){t.contactNets=arguments[0]})}angular.module("virtual-center").controller("contactNetsController",e),e.$inject=["$scope","$cnContactNets"]}(),function(){"use strict";function e(e,t,n,r,c){function o(){console.log("ejemplo")}function a(){console.log(arguments[0])}t.contactNets=[],t.$cnRules=r,e.addNew=o,t.save=a,r.get().then(function(){t.$cnRules.rules=arguments[0]})}angular.module("virtual-center").controller("rulesController",e),e.$inject=["$rootScope","$scope","$cnContactNets","$cnRules","$filter"]}(),function(){"use strict";function e(e,t){function n(){var n=e.defer();return t.get("listContactNets").then(function(){n.resolve(arguments[0])}),n.promise}function r(){var n=e.defer();return t.get("contactNetId").then(function(){n.resolve(arguments[0])}),n.promise}var c=this;return c.contactNets=[],c.get=n,c.getById=r,c}angular.module("virtual-center").service("$cnContactNets",e),e.$inject=["$q","$cnMocks"]}(),function(){"use strict";function e(e,t){function n(){var n=e.defer();return c?n.resolve(c):t.get("languages").then(function(){c=arguments[0],n.resolve(c)}),n.promise}var r=this,c=!1;return r.get=n,r}angular.module("virtual-center").service("$cnLanguages",e),e.$inject=["$q","$cnMocks"]}(),function(){"use strict";function e(e,t){function n(){var n=e.defer();return c?n.resolve(c):t.getById("menu","MENU").then(function(){c=arguments[0],n.resolve(c)}),n.promise}var r=this,c=!1;return r.get=n,r}angular.module("virtual-center").service("$cnMenu",e),e.$inject=["$q","$cnMocks"]}(),function(){"use strict";function e(e,t){function n(){var n=e.defer();return t.get("rules").then(function(){n.resolve(arguments[0])}),n.promise}function r(){var n=e.defer();return t.get("rulesId").then(function(){n.resolve(arguments[0])}),n.promise}var c=this;return c.rules=[],c.get=n,c.getById=r,c}angular.module("virtual-center").service("$cnRules",e),e.$inject=["$q","$cnMocks"]}(),function(){"use strict";function e(e){function t(e,t,n,r){}function n(e){console.log(e)}var r={restrict:"EA",scope:!1,link:t,templateUrl:"modules/contactNets/directives/cnContactNetChatCardChannelConfiguration/cnContactNetChatCardChannelConfiguration.html",controller:n};return n.$inject=["$scope"],r}angular.module("virtual-center").directive("cnContactNetChatCardChannelConfiguration",e),e.$inject=["$cnContactNets"]}(),function(){"use strict";function e(e){function t(e,t,n,r){}function n(e){console.log(e)}var r={restrict:"EA",scope:!1,link:t,templateUrl:"modules/contactNets/directives/cnContactNetVoiceCardChannelConfiguration/cnContactNetVoiceCardChannelConfiguration.html",controller:n};return n.$inject=["$scope"],r}angular.module("virtual-center").directive("cnContactNetVoiceCardChannelConfiguration",e),e.$inject=["$cnContactNets"]}(),function(){"use strict";function e(e){function t(t,n,r,c){function o(){console.log("lasldglasdg",e.contactNets),e.contactNets.splice(0,0,{id:a(1,50),description:"Nuevo ContactNet",queueType:"BOTH",isACD:1,openCard:!0,modificable:!0,channels:{1:1,2:2,3:3}}),e.getById().then(function(){e.contactNets[0].contactNetInfo=arguments[0]})}function a(){return Math.floor(Math.random()*arguments[1])+arguments[0]}n.on("click",o)}var n={restrict:"EA",scope:{},link:t};return n}angular.module("virtual-center").directive("cnCreateContactNet",e),e.$inject=["$cnContactNets"]}(),function(){"use strict";function e(e){function t(t,n,r,c){function o(){console.log("lasldglasdg",e.rules),e.rules.splice(0,0,{id:a(1,50),description:"Nueva Regla",openCard:!0,modificable:!0}),e.getById().then(function(){e.rules[0].RuleInfo=arguments[0]})}function a(){return Math.floor(Math.random()*arguments[1])+arguments[0]}n.on("click",o)}var n={restrict:"EA",scope:{},link:t};return n}angular.module("virtual-center").directive("cnCreateRule",e),e.$inject=["$cnRules"]}(),function(){"use strict";function e(e){function t(t,n,r,c){function o(){e.path(r.cnNavigate),t.$apply()}n.css("cursor","pointer"),n.on("click",o)}var n={restrict:"A",scope:{cnNavigate:"@"},link:t};return n}function t(e){function t(){arguments[0]&&e.path(arguments[0])}var n=this;n.path=t}angular.module("virtual-center").directive("cnNavigate",e).service("$cnNavigate",t),e.$inject=["$cnNavigate"],t.$inject=["$location"]}(),function(){"use strict";function e(e){function t(t,n,r,c){function o(){if("button"!==arguments[0].target.localName){var n=JSON.parse(r.cncontactnetinfo);angular.forEach(e.contactNets,function(){var r=arguments;r[0].id==n.id&&(e.contactNets[r[1]].contactNetInfo?(e.contactNets[r[1]].contactNetInfo=null,e.contactNets[r[1]].openCard=!e.contactNets[r[1]].openCard):(e.contactNets[r[1]].openCard=!e.contactNets[r[1]].openCard,e.getById().then(function(){console.log(arguments[0]),e.contactNets[r[1]].contactNetInfo=arguments[0]})),t.$apply())})}}n.on("click",o)}var n={restrict:"EA",scope:{},link:t};return n}angular.module("virtual-center").directive("cnOpenContactNets",e),e.$inject=["$cnContactNets"]}(),function(){"use strict";function e(e){function t(t,n,r,c){function o(){if("button"!==arguments[0].target.localName){var n=JSON.parse(r.cnruleinfo);angular.forEach(e.rules,function(){var r=arguments;r[0].id==n.id&&(e.rules[r[1]].downloadedData?e.rules[r[1]].openCard=!e.rules[r[1]].openCard:(e.rules[r[1]].openCard=!e.rules[r[1]].openCard,e.getById().then(function(){e.rules[r[1]]=arguments[0][0],e.rules[r[1]].downloadedData=!0,e.rules[r[1]].openCard=!e.rules[r[1]].openCard,console.log(e.rules,e.rules[r[1]])})),t.$apply())})}}n.on("click",o)}var n={restrict:"EA",scope:{},link:t};return n}angular.module("virtual-center").directive("cnOpenRules",e),e.$inject=["$cnRules"]}(),function(){"use strict";function e(e,t,n){function r(){var e=t.defer(),r=arguments;return n(function(){var t=[];angular.forEach(i.bbdd[r[0]],function(){t.push(arguments[0])}),e.resolve(t)},a(200,500)),e.promise}function c(){var e=t.defer(),r=arguments;return n(function(){e.resolve(i.bbdd[r[0]][r[1]]||!1)},a(200,500)),e.promise}function o(){var e=t.defer(),r=arguments;return n(function(){if(void 0===r[2]){var t=a(1e3,9999);r[1].id=t,e.resolve(i.bbdd[r[0]][t]=r[1])}else e.resolve(i.bbdd[r[0]][r[2]]=r[1])},a(300,500)),e.promise}function a(){return Math.floor(Math.random()*arguments[1])+arguments[0]}function s(){for(var t=0;t<u.length;t++)!function(t){var n=arguments;e.get("modules/core/services/mocks/json/"+n[0]+".json").success(function(){i.bbdd[n[0]]=arguments[0]})}(u[t])}var u=["menu","listContactNets","contactNetId","channels","rules","rulesId","languages"],i=this;return i.bbdd={},i.get=r,i.getById=c,i.set=o,s(),i}angular.module("virtual-center").service("$cnMocks",e),e.$inject=["$http","$q","$timeout"]}(),function(){"use strict";function e(e,t){function n(e,t,n,r){function c(){}c()}var r={restrict:"EA",scope:{rule:"=cnRule"},templateUrl:"modules/rules/directives/categorization/categorization.html",link:n};return r}angular.module("virtual-center").directive("cnCategorization",e),e.$inject=["$cnLanguages","$filter"]}(),function(){"use strict";function e(e,t){function n(n,r,c,o){function a(){var e=angular.copy(arguments[0]);e.selected?(delete e.selected,n.rule.routingRules[0].rules[u].data.push(e)):angular.forEach(n.rule.routingRules[0].rules[u].data,function(){arguments[0].Language_Id==e.Language_Id&&n.rule.routingRules[0].rules[u].data.splice(arguments[1],1)})}function s(){e.get().then(function(){n.languages=arguments[0],angular.forEach(n.languages,function(){var e=t("filter")(n.rule.routingRules[0].rules[u].data,{Language_Id:arguments[0].Language_Id});e.length&&(n.languages[arguments[1]].selected=!0,console.log(n.languages))})}),angular.forEach(n.rule.routingRules[0].rules,function(){20==arguments[0].type&&(u=arguments[1])}),u===!1&&(u=n.rule.routingRules[0].rules.length,n.rule.routingRules[0].rules.push({evaluationMode:"1",type:"20",data:[],multiRule:!0}))}n.languages=[],n.toggleLanguage=a;var u=!1;s()}var r={restrict:"EA",scope:{rule:"=cnRule"},templateUrl:"modules/rules/directives/selectLanguages/selectLanguages.html",link:n};return r}angular.module("virtual-center").directive("cnSelectLanguages",e),e.$inject=["$cnLanguages","$filter"]}(),function(){"use strict";function e(e,t){function n(n,r,c,o){function a(){var e=[];angular.forEach(n.rule.destinations,function(){var n=t("filter")(i,{id:arguments[0]});n.length&&(n[0].selected=!0,e.push(n[0]))}),angular.forEach(i,function(){~n.rule.destinations.indexOf(arguments[0].id)||e.push(arguments[0])}),n.contactNets=e}function s(){arguments[0].selected?n.rule.destinations.push(arguments[0].id):n.rule.destinations.splice(n.rule.destinations.indexOf(arguments[0].id),1),a()}function u(){var e=(arguments,n.rule.destinations.indexOf(arguments[0].id));n.rule.destinations.splice(e,1),arguments[1]?n.rule.destinations.splice(e-1,0,arguments[0].id):n.rule.destinations.splice(e+1,0,arguments[0].id),a()}var i=[];n.contactNets=[],n.moveContactNet=u,n.selectCN=s,e.get().then(function(){i=arguments[0],a()})}var r={restrict:"EA",scope:{rule:"=cnRule"},templateUrl:"modules/rules/directives/selectOrderContactNet/selectOrderContactNet.html",link:n};return r}angular.module("virtual-center").directive("cnSelectOrderContactNet",e),e.$inject=["$cnContactNets","$filter"]}();
>>>>>>> origin/master
