!function(){"use strict";angular.module("virtual-center",["ui.router","ngSanitize","ngAnimate","ngAria","ngMaterial"])}(),function(){"use strict";function e(e,n){var t=e.extendPalette("blue",{100:"#E0F2FA",200:"#AFDDF3",300:"#71C3E9",400:"#57B7E5",500:"#3CACE1",600:"#22A1DC",700:"#1E8DC2",800:"#1A7AA7",900:"#16678D",A100:"#AFDDF3",A200:"#3CACE1",A400:"#57B7E5",A700:"#1E8DC2"});e.definePalette("blueVC",t),e.theme("default").primaryPalette("grey").accentPalette("blueVC").warnPalette("red"),n.icon("add","assets/icons/add.svg").icon("arrow_downward","assets/icons/arrow_downward.svg").icon("arrow_upward","assets/icons/arrow_upward.svg").icon("menu","assets/icons/menu.svg").icon("more_vert","assets/icons/more_vert.svg").icon("contactnets","assets/icons/contactnets.svg").icon("channels","assets/icons/channels.svg").icon("rules","assets/icons/rules.svg").icon("twitter","assets/icons/twitter.svg").icon("mail","assets/icons/mail.svg").icon("message","assets/icons/message.svg").icon("phone","assets/icons/phone.svg").icon("shape","assets/icons/shape.svg").icon("insert","assets/icons/insert-drive-file.svg").icon("mode-edit","assets/icons/mode-edit.svg")}angular.module("virtual-center").config(e),e.$inject=["$mdThemingProvider","$mdIconProvider"]}(),function(){"use strict";function e(e,n,t,c,r,a,o){function s(){var e=arguments;return function(){c(e[0]).toggle()}}n.toggleLeft=s("left"),n.menu={},n.cnNavigate=a,n.environment={},e.fab={isOpen:!1,trigger:{icon:"add",action:function(){}},actions:[]},n.isOpenLeft=function(){return c("left").isOpen()},r.get().then(function(){console.log("arguments",arguments[0]),n.menu=arguments[0]}),e.$on("$stateChangeSuccess",function(){switch(e.fab.isOpen=!1,e.fab.actions=[],arguments[1].url){case"/contactnets":n.selectedIndex=0,n.environment.actualSection="ContactNets";break;case"/channels":n.selectedIndex=1,n.environment.actualSection="Canales";break;case"/rules":n.selectedIndex=2,n.environment.actualSection="Reglas"}})}angular.module("virtual-center").controller("appController",e),e.$inject=["$rootScope","$scope","$timeout","$mdSidenav","$cnMenu","$cnNavigate","$location"]}(),function(){"use strict";function e(e,n){e.state("contactnets",{url:"/contactnets",templateUrl:"modules/contactNets/contactNets.html",controller:"contactNetsController"}).state("channels",{url:"/channels",templateUrl:"modules/channels/channels.html",controller:"channelsController"}).state("rules",{url:"/rules",templateUrl:"modules/rules/rules.html",controller:"rulesController"}),n.otherwise("/contactnets")}angular.module("virtual-center").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e,n,t,c,r){function a(){c.channels.unshift({multimedia:"Nuevo Phone",downloadedData:!0,openCard:!0,multimediaId:(new Date).getTime(),channelId:1,configModificable:!1})}function o(){c.channels.unshift({multimedia:"Nuevo Chat",downloadedData:!0,openCard:!0,multimediaId:(new Date).getTime(),channelId:2,configModificable:!1})}function s(){c.channels.unshift({multimedia:"Nuevo Mail",downloadedData:!0,openCard:!0,multimediaId:(new Date).getTime(),channelId:3,configModificable:!1})}function i(){e.fab.isOpen=!0}function u(){console.log(arguments[0])}n.contactNets=[],n.$cnChannels=c,n.save=u,n.openFab=i,e.fab.trigger.action=!1,e.fab.actions=[{icon:"phone",action:a},{icon:"message",action:o},{icon:"mail",action:s}],c.get().then(function(){})}angular.module("virtual-center").controller("channelsController",e),e.$inject=["$rootScope","$scope","$cnContactNets","$cnChannels","$filter"]}(),function(){"use strict";function e(e,n){e.contactNetsService=n,n.get().then(function(){n.contactNets=arguments[0]})}angular.module("virtual-center").controller("contactNetsController",e),e.$inject=["$scope","$cnContactNets"]}(),function(){"use strict";function e(e,n,t,c,r){function a(){console.log("ejemplo")}function o(){console.log(arguments[0])}n.contactNets=[],n.$cnRules=c,e.addNew=a,n.save=o,c.get().then(function(){n.$cnRules.rules=arguments[0]})}angular.module("virtual-center").controller("rulesController",e),e.$inject=["$rootScope","$scope","$cnContactNets","$cnRules","$filter"]}(),function(){"use strict";function e(e,n){function t(){var t=e.defer();return n.get("channels").then(function(){t.resolve(arguments[0])}),t.promise}function c(){var t=e.defer();return n.get("channelsId").then(function(){t.resolve(arguments[0])}),t.promise}var r=this;return r.channels=[],r.get=t,r.getById=c,r}angular.module("virtual-center").service("$cnChannels",e),e.$inject=["$q","$cnMocks"]}(),function(){"use strict";function e(e,n){function t(){var t=e.defer();return n.get("listContactNets").then(function(){t.resolve(arguments[0])}),t.promise}function c(){var t=e.defer();return n.get("contactNetId").then(function(){t.resolve(arguments[0])}),t.promise}var r=this;return r.contactNets=[],r.get=t,r.getById=c,r}angular.module("virtual-center").service("$cnContactNets",e),e.$inject=["$q","$cnMocks"]}(),function(){"use strict";function e(e,n){function t(){var t=e.defer();return r?t.resolve(r):n.get("languages").then(function(){r=arguments[0],t.resolve(r)}),t.promise}var c=this,r=!1;return c.get=t,c}angular.module("virtual-center").service("$cnLanguages",e),e.$inject=["$q","$cnMocks"]}(),function(){"use strict";function e(e,n){function t(){var t=e.defer();return r?t.resolve(r):n.getById("menu","MENU").then(function(){r=arguments[0],t.resolve(r)}),t.promise}var c=this,r=!1;return c.get=t,c}angular.module("virtual-center").service("$cnMenu",e),e.$inject=["$q","$cnMocks"]}(),function(){"use strict";function e(e,n){function t(){var t=e.defer();return n.get("rules").then(function(){t.resolve(arguments[0])}),t.promise}function c(){var t=e.defer();return n.get("rulesId").then(function(){t.resolve(arguments[0])}),t.promise}var r=this;return r.rules=[],r.get=t,r.getById=c,r}angular.module("virtual-center").service("$cnRules",e),e.$inject=["$q","$cnMocks"]}(),function(){"use strict";function e(e){function n(e,n,t,c){}function t(e){}var c={restrict:"EA",scope:!1,link:n,templateUrl:"modules/contactNets/directives/cnContactNetChatCardChannelConfiguration/cnContactNetChatCardChannelConfiguration.html",controller:t};return t.$inject=["$scope"],c}angular.module("virtual-center").directive("cnContactNetChatCardChannelConfiguration",e),e.$inject=["$cnContactNets"]}(),function(){"use strict";function e(e){function n(e,n,t,c){}function t(e){}var c={restrict:"EA",link:n,templateUrl:"modules/contactNets/directives/cnContactNetVoiceCardChannelConfiguration/cnContactNetVoiceCardChannelConfiguration.html",controller:t};return t.$inject=["$scope"],c}angular.module("virtual-center").directive("cnContactNetVoiceCardChannelConfiguration",e),e.$inject=["$cnContactNets"]}(),function(){"use strict";function e(e){function n(n,t,c,r){function a(){console.log("lasldglasdg",e.contactNets),e.contactNets.splice(0,0,{id:o(1,50),description:"Nuevo ContactNet",queueType:"BOTH",isACD:1,openCard:!0,modificable:!0,channels:{1:1,2:2,3:3}}),e.getById().then(function(){e.contactNets[0].contactNetInfo=arguments[0]})}function o(){return Math.floor(Math.random()*arguments[1])+arguments[0]}t.on("click",a)}var t={restrict:"EA",scope:{},link:n};return t}angular.module("virtual-center").directive("cnCreateContactNet",e),e.$inject=["$cnContactNets"]}(),function(){"use strict";function e(e){function n(n,t,c,r){function a(){console.log("lasldglasdg",e.rules),e.rules.splice(0,0,{id:o(1,50),description:"Nueva Regla",openCard:!0,modificable:!0}),e.getById().then(function(){e.rules[0].RuleInfo=arguments[0]})}function o(){return Math.floor(Math.random()*arguments[1])+arguments[0]}t.on("click",a)}var t={restrict:"EA",scope:{},link:n};return t}angular.module("virtual-center").directive("cnCreateRule",e),e.$inject=["$cnRules"]}(),function(){"use strict";function e(e){function n(n,t,c,r){function a(){e.path(c.cnNavigate),n.$apply()}t.css("cursor","pointer"),t.on("click",a)}var t={restrict:"A",scope:{cnNavigate:"@"},link:n};return t}function n(e){function n(){arguments[0]&&e.path(arguments[0])}var t=this;t.path=n}angular.module("virtual-center").directive("cnNavigate",e).service("$cnNavigate",n),e.$inject=["$cnNavigate"],n.$inject=["$location"]}(),function(){"use strict";function e(e){function n(n,t,c,r){function a(){if("button"!==arguments[0].target.localName){var t=JSON.parse(c.cnchannelinfo);angular.forEach(e.channels,function(){var c=arguments;c[0].channelId==t.channelId&&(e.channels[c[1]].downloadedData?e.channels[c[1]].openCard=!e.channels[c[1]].openCard:(e.channels[c[1]].openCard=!e.channels[c[1]].openCard,e.getById().then(function(){e.channels[c[1]]=arguments[0][0],e.channels[c[1]].downloadedData=!0,e.channels[c[1]].openCard=!e.channels[c[1]].openCard,console.log(e.channels,e.channels[c[1]])})),n.$apply())})}}t.on("click",a)}var t={restrict:"EA",scope:{},link:n};return t}angular.module("virtual-center").directive("cnOpenChannels",e),e.$inject=["$cnChannels"]}(),function(){"use strict";function e(e){function n(n,t,c,r){function a(){if("button"!==arguments[0].target.localName){var t=JSON.parse(c.cncontactnetinfo);angular.forEach(e.contactNets,function(){var c=arguments;c[0].id==t.id&&(e.contactNets[c[1]].contactNetInfo?(e.contactNets[c[1]].contactNetInfo=null,e.contactNets[c[1]].openCard=!e.contactNets[c[1]].openCard):(e.contactNets[c[1]].openCard=!e.contactNets[c[1]].openCard,e.getById().then(function(){console.log(arguments[0]),e.contactNets[c[1]].contactNetInfo=arguments[0]})),n.$apply())})}}t.on("click",a)}var t={restrict:"EA",scope:{},link:n};return t}angular.module("virtual-center").directive("cnOpenContactNets",e),e.$inject=["$cnContactNets"]}(),function(){"use strict";function e(e){function n(n,t,c,r){function a(){if("button"!==arguments[0].target.localName){var t=JSON.parse(c.cnruleinfo);angular.forEach(e.rules,function(){var c=arguments;c[0].id==t.id&&(e.rules[c[1]].downloadedData?e.rules[c[1]].openCard=!e.rules[c[1]].openCard:(e.rules[c[1]].openCard=!e.rules[c[1]].openCard,e.getById().then(function(){e.rules[c[1]]=arguments[0][0],e.rules[c[1]].downloadedData=!0,e.rules[c[1]].openCard=!e.rules[c[1]].openCard,console.log(e.rules,e.rules[c[1]])})),n.$apply())})}}t.on("click",a)}var t={restrict:"EA",scope:{},link:n};return t}angular.module("virtual-center").directive("cnOpenRules",e),e.$inject=["$cnRules"]}(),function(){"use strict";function e(e,n,t){function c(){var e=n.defer(),c=arguments;return t(function(){var n=[];angular.forEach(u.bbdd[c[0]],function(){n.push(arguments[0])}),e.resolve(n)},o(200,500)),e.promise}function r(){var e=n.defer(),c=arguments;return t(function(){e.resolve(u.bbdd[c[0]][c[1]]||!1)},o(200,500)),e.promise}function a(){var e=n.defer(),c=arguments;return t(function(){if(void 0===c[2]){var n=o(1e3,9999);c[1].id=n,e.resolve(u.bbdd[c[0]][n]=c[1])}else e.resolve(u.bbdd[c[0]][c[2]]=c[1])},o(300,500)),e.promise}function o(){return Math.floor(Math.random()*arguments[1])+arguments[0]}function s(){for(var n=0;n<i.length;n++)!function(n){var t=arguments;e.get("modules/core/services/mocks/json/"+t[0]+".json").success(function(){u.bbdd[t[0]]=arguments[0]})}(i[n])}var i=["menu","listContactNets","contactNetId","channels","rules","rulesId","languages","channels","channelsId"],u=this;return u.bbdd={},u.get=c,u.getById=r,u.set=a,s(),u}angular.module("virtual-center").service("$cnMocks",e),e.$inject=["$http","$q","$timeout"]}(),function(){"use strict";function e(e,n){function t(e,n,t,c){function r(){}r()}var c={restrict:"EA",scope:{rule:"=cnRule"},templateUrl:"modules/rules/directives/categorization/categorization.html",link:t};return c}angular.module("virtual-center").directive("cnCategorization",e),e.$inject=["$cnLanguages","$filter"]}(),function(){"use strict";function e(e,n){function t(t,c,r,a){function o(){var e=angular.copy(arguments[0]);e.selected?(delete e.selected,t.rule.routingRules[0].rules[i].data.push(e)):angular.forEach(t.rule.routingRules[0].rules[i].data,function(){arguments[0].Language_Id==e.Language_Id&&t.rule.routingRules[0].rules[i].data.splice(arguments[1],1)})}function s(){e.get().then(function(){t.languages=arguments[0],angular.forEach(t.languages,function(){var e=n("filter")(t.rule.routingRules[0].rules[i].data,{Language_Id:arguments[0].Language_Id});e.length&&(t.languages[arguments[1]].selected=!0,console.log(t.languages))})}),angular.forEach(t.rule.routingRules[0].rules,function(){20==arguments[0].type&&(i=arguments[1])}),i===!1&&(i=t.rule.routingRules[0].rules.length,t.rule.routingRules[0].rules.push({evaluationMode:"1",type:"20",data:[],multiRule:!0}))}t.languages=[],t.toggleLanguage=o;var i=!1;s()}var c={restrict:"EA",scope:{rule:"=cnRule"},templateUrl:"modules/rules/directives/selectLanguages/selectLanguages.html",link:t};return c}angular.module("virtual-center").directive("cnSelectLanguages",e),e.$inject=["$cnLanguages","$filter"]}(),function(){"use strict";function e(e,n){function t(t,c,r,a){function o(){var e=[];angular.forEach(t.rule.destinations,function(){var t=n("filter")(u,{id:arguments[0]});t.length&&(t[0].selected=!0,e.push(t[0]))}),angular.forEach(u,function(){~t.rule.destinations.indexOf(arguments[0].id)||e.push(arguments[0])}),t.contactNets=e}function s(){arguments[0].selected?t.rule.destinations.push(arguments[0].id):t.rule.destinations.splice(t.rule.destinations.indexOf(arguments[0].id),1),o()}function i(){var e=(arguments,t.rule.destinations.indexOf(arguments[0].id));t.rule.destinations.splice(e,1),arguments[1]?t.rule.destinations.splice(e-1,0,arguments[0].id):t.rule.destinations.splice(e+1,0,arguments[0].id),o()}var u=[];t.contactNets=[],t.moveContactNet=i,t.selectCN=s,e.get().then(function(){u=arguments[0],o()})}var c={restrict:"EA",scope:{rule:"=cnRule"},templateUrl:"modules/rules/directives/selectOrderContactNet/selectOrderContactNet.html",link:t};return c}angular.module("virtual-center").directive("cnSelectOrderContactNet",e),e.$inject=["$cnContactNets","$filter"]}();