!function(){"use strict";angular.module("virtual-center",["ui.router","ngSanitize","ngAnimate","ngAria","ngMaterial"])}(),function(){"use strict";function t(t,e){var n=t.extendPalette("blue",{100:"#E0F2FA",200:"#AFDDF3",300:"#71C3E9",400:"#57B7E5",500:"#3CACE1",600:"#22A1DC",700:"#1E8DC2",800:"#1A7AA7",900:"#16678D",A100:"#AFDDF3",A200:"#3CACE1",A400:"#57B7E5",A700:"#1E8DC2"});t.definePalette("blueVC",n),t.theme("default").primaryPalette("grey").accentPalette("blueVC").warnPalette("red"),e.icon("add","/contactNetConfig/assets/icons/add.svg").icon("arrow_downward","/contactNetConfig/assets/icons/arrow_downward.svg").icon("arrow_upward","/contactNetConfig/assets/icons/arrow_upward.svg").icon("menu","/contactNetConfig/assets/icons/menu.svg").icon("more_vert","/contactNetConfig/assets/icons/more_vert.svg").icon("contactnets","/contactNetConfig/assets/icons/contactnets.svg").icon("channels","/contactNetConfig/assets/icons/channels.svg").icon("rules","/contactNetConfig/assets/icons/rules.svg").icon("twitter","/contactNetConfig/assets/icons/twitter.svg").icon("mail","/contactNetConfig/assets/icons/mail.svg").icon("message","/contactNetConfig/assets/icons/message.svg").icon("phone","/contactNetConfig/assets/icons/phone.svg").icon("shape","/contactNetConfig/assets/icons/shape.svg").icon("insert","/contactNetConfig/assets/icons/insert-drive-file.svg").icon("edit","/contactNetConfig/assets/icons/edit.svg").icon("search","/contactNetConfig/assets/icons/search.svg").icon("delete","/contactNetConfig/assets/icons/delete.svg").icon("repos","/contactNetConfig/assets/icons/repos.svg").icon("skills","/contactNetConfig/assets/icons/skills.svg").icon("pause_state","/contactNetConfig/assets/icons/pause_state.svg").icon("school","/contactNetConfig/assets/icons/school.svg").icon("local_offer","/contactNetConfig/assets/icons/local_offer.svg").icon("content_copy","/contactNetConfig/assets/icons/content_copy.svg")}t.$inject=["$mdThemingProvider","$mdIconProvider"],angular.module("virtual-center").config(t)}(),function(){"use strict";function t(t,e,n,o,a,r,c,i,s){function u(){var t=arguments;return function(){o(t[0]).toggle()}}e.toggleLeft=u("left"),e.menu={},e.cnNavigate=r,e.environment={},e.session=s.session,t.fab={isOpen:!1,hide:!1,trigger:{icon:"add",action:function(){}},actions:[]},e.isOpenLeft=function(){return o("left").isOpen()},a.get().then(function(){console.log("arguments",arguments[0]),e.menu=arguments[0]}),t.$on("$stateChangeSuccess",function(){switch(t.fab.isOpen=!1,t.fab.hide=!1,t.fab.actions=[],arguments[1].url){case"/contactnets":e.selectedIndex=0,e.environment.actualSection="ContactNets";break;case"/rules":e.selectedIndex=1,e.environment.actualSection="Canales";break;case"/channels":e.selectedIndex=2,e.environment.actualSection="Reglas";break;case"/repos":e.selectedIndex=3,e.environment.actualSection="Repositorio"}})}t.$inject=["$rootScope","$scope","$timeout","$mdSidenav","$cnMenu","$cnNavigate","$location","$interval","$window"],angular.module("virtual-center").controller("appController",t)}(),function(){"use strict";function t(t,e){t.state("contactnets",{"abstract":!0,templateUrl:"/contactNetConfig/layout.html"}).state("contactnets.contatNetConfig",{url:"/contactnets",templateUrl:"/contactNetConfig/modules/contactNets/contactNets.html",controller:"contactNetsController"}).state("contactnets.channels",{url:"/channels",templateUrl:"/contactNetConfig/modules/channels/channels.html",controller:"channelsController"}).state("contactnets.rules",{url:"/rules",templateUrl:"/contactNetConfig/modules/rules/rules.html",controller:"rulesController"}).state("contactnets.repos",{url:"/repos",templateUrl:"/contactNetConfig/modules/repos/repos.html",controller:"reposController"}),e.otherwise("/contactnets")}t.$inject=["$stateProvider","$urlRouterProvider"],angular.module("virtual-center").config(t)}(),function(){"use strict";function t(t,e,n,o,a,r){function c(){var t=arguments;r.show(r.alert().clickOutsideToClose(!0).title("Acción no permitida").textContent("Para contratar un nuevo canal telefónico deberá contactar con su proveedor de servicios.").ariaLabel("Alert dialog").ok("Cerrar").targetEvent(t[0]))}function i(){o.channels.unshift({multimedia:"Nuevo Chat",downloadedData:!0,openCard:!0,newItem:!0,multimediaId:(new Date).getTime(),channelId:2,configModificable:!0,multimediaParams:{ChatType:"Chat",ChatConfig:{templateId:1,authenticationText:"",authenticationMode:"anonymous",loadingMode:"closed",headerText:"",welcomeText:"",resetText:"",connectText:"",primaryBackgroundColor:"CCCCCC",secundaryBackgroundColor:"FF0000",primaryColor:"000000",secundaryColor:"FFFFFF"}}})}function s(){o.channels.unshift({multimedia:"Nuevo Mail",downloadedData:!0,openCard:!0,multimediaId:(new Date).getTime(),channelId:3,configModificable:!0,multimediaParams:{MailType:"SendGrid",MailConfig:{}}})}function u(){t.fab.isOpen=!0}function l(){var t=angular.copy(arguments[0]);delete t.openCard,t.newItem&&(t.multimediaId=-1),o.save(t)}function g(){var t=arguments;o.remove(e.$cnChannels.channels[t[0]].multimediaId).then(function(){e.$cnChannels.channels.splice(t[0],1)})}e.contactNets=[],e.colorOptions=["FFFFFF","FF8A80","FFD180","FFFF8D","CFD8DC","80D8FF","A7FFEB","CCFF90"],e.scriptCode='<script>console.log("empty");</script>',e.$cnChannels=o,e.save=l,e.remove=g,e.openFab=u,t.fab.trigger.action=function(){},t.fab.actions=[{icon:"phone",action:c},{icon:"message",action:i},{icon:"mail",action:s}],e.$cnChannels.channels.length||(e.loading=!0),o.get().then(function(){e.$cnChannels.channels=arguments[0],e.loading=!1})}t.$inject=["$rootScope","$scope","$cnContactNets","$cnChannels","$filter","$mdDialog"],angular.module("virtual-center").controller("channelsController",t)}(),function(){"use strict";function t(t,e,n,o){e.contactNetsService=n,t.fab.trigger.action=o.createContactNet,n.get().then(function(){n.contactNets=arguments[0]})}t.$inject=["$rootScope","$scope","$cnContactNets","$cnCreateContactNet"],angular.module("virtual-center").controller("contactNetsController",t)}(),function(){"use strict";function t(t,e,n,o,a){function r(){e.repos[arguments[0]].downloadedData=!1,e.repos[arguments[0]].openCard=!e.repos[arguments[0]].openCard}function c(){console.log(arguments[0])}e.repos={qualifications:{icon:"school",title:"Cualificaciones de casos",openCard:!1,downloadedData:!1},categorizations:{icon:"local_offer",title:"Categorización de casos",openCard:!1,downloadedData:!1},pause_states:{icon:"pause_state",title:"Estados de pausa",openCard:!1,downloadedData:!1},skills:{icon:"skills",title:"Skills de agentes",openCard:!1,downloadedData:!1}},e.save=c,e.open=r,t.fab.hide=!0}t.$inject=["$rootScope","$scope","$cnContactNets","$cnChannels","$filter"],angular.module("virtual-center").controller("reposController",t)}(),function(){"use strict";function t(t,e,n,o,a,r,c){function i(){arguments[0].routingRules.push({name:"nueva regla",openCard:!0,destinations:[],rules:[]})}function s(){var t=arguments;r.get().then(function(){arguments[0].length?o.rules.unshift({id:(new Date).getTime(),newItem:!0,name:"Nuevo grupo de reglas",downloadedData:!0,openCard:!0,configModificable:!1,modificable:!0,vocabulary:[],routingRules:[]}):c.show(c.alert().clickOutsideToClose(!0).title("Acción no permitida").textContent("Para crear una regla es necesario tener al menos un canal creado.").ariaLabel("Alert dialog").ok("Cerrar").targetEvent(t[0]))})}function u(){var t=arguments;t[0].newItem&&(t[0].id=-1),o.save(arguments[0]).then(function(){arguments[0].downloadedData=!0,t[0]=arguments[0]})}function l(){var t=arguments;o.remove(arguments[0]).then(function(){o.rules.splice(o.rules.indexOf(t[1]),1)})}function g(){arguments;o.duplicate(arguments[0].id,"Copia de "+arguments[0].name).then(function(){arguments[0].downloadedData=!0,o.rules.unshift(arguments[0])})}e.contactNets=[],e.$cnRules=o,t.fab.trigger.action=s,e.addNew=s,e.addRoutingRule=i,e.save=u,e.duplicate=g,e.remove=l,e.$cnRules.rules.length||(e.loading=!0),o.get().then(function(){e.$cnRules.rules=arguments[0],e.loading=!1})}t.$inject=["$rootScope","$scope","$cnContactNets","$cnRules","$filter","$cnChannels","$mdDialog"],angular.module("virtual-center").controller("rulesController",t)}(),function(){"use strict";function t(t,e){function n(){var n=t.defer();return e.get("/ivr/getcategories").then(function(){n.resolve(arguments[0].data)},function(){n.reject(arguments[0].data)}),n.promise}function o(){var n=arguments,o=t.defer();return e.post("/ivr/getcontactnetsusedbycategory/",{id:n[0].id}).then(function(){o.resolve(arguments[0].data)},function(){o.reject(arguments[0].data)}),o.promise}function a(){var n=arguments,o=t.defer();return~n[0].id?n[0].action="MOD":n[0].action="ADD",e.post("/ivr/savecategory",n[0]).then(function(){o.resolve(arguments[0].data)},function(){o.reject(arguments[0].data)}),o.promise}function r(){var n=t.defer();return e.post("/ivr/deletecategory",{id:arguments[0].id}).then(function(){n.resolve(arguments[0].data)},function(){n.reject(arguments[0].data)}),n.promise}var c=this;return c.categories=[],c.get=n,c.getContactnets=o,c.save=a,c.remove=r,c}t.$inject=["$q","$http"],angular.module("virtual-center").service("$cnCategories",t)}(),function(){"use strict";function t(t,e){function n(){var n=t.defer();return e.get("/ivr/getnetworkmultimedias").then(function(){n.resolve(arguments[0].data)}),n.promise}function o(){var n=arguments,o=t.defer();return e.post("/ivr/savenetworkmultimedia",n[0]).then(function(){o.resolve(arguments[0].data)}),o.promise}function a(){var n=t.defer(),o=angular.isArray(arguments[0])?arguments[0]:[arguments[0]];return e.post("/ivr/deletenetworkmultimedia",o).then(function(){n.resolve(arguments[0].data)}),n.promise}function r(){var n=t.defer();return e.post("/ivr/getnetworkmultimediabyid",{id:arguments[0]}).then(function(){n.resolve(arguments[0].data)}),n.promise}var c=this;return c.channels=[],c.get=n,c.save=o,c.remove=a,c.getById=r,c}t.$inject=["$q","$http"],angular.module("virtual-center").service("$cnChannels",t)}(),function(){"use strict";function t(t,e,n){function o(){var e=t.defer();return n.get("/ivr/getcontactnets").then(function(){console.log("getcontactnets",arguments[0].data),e.resolve(arguments[0].data)}),e.promise}function a(){var e=t.defer();return console.log("ID ContactNet Enviado",arguments[0]),n.post("/ivr/getcontactnetbyid",{id:arguments[0]}).then(function(){e.resolve(arguments[0].data)}),e.promise}function r(){var e=t.defer();return console.log(arguments[0]),n.post("/ivr/getspeech",{type:"MOH"}).then(function(){e.resolve(arguments[0].data)}),e.promise}function c(){var e=t.defer();return n.get("/ivr/getsupervisors").then(function(){e.resolve(arguments[0].data)}),e.promise}function i(){var e=t.defer();return console.log(arguments[0]),n.get("/ivr/getvoices").then(function(){e.resolve(arguments[0].data)}),e.promise}function s(){var e=t.defer();return console.log(arguments[0]),n.get("/home/stream/streamspeech?id="+arguments[0]).then(function(){e.resolve(arguments[0].data)}),e.promise}function u(){var e=t.defer();return console.log("channelId",arguments[0]),n.post("/ivr/getstrategies",{channelId:arguments[0]}).then(function(){e.resolve(arguments[0].data)}),e.promise}function l(){var e=t.defer();return console.log("channelId",arguments[0]),n.get("/ivr/getoutgoing").then(function(){e.resolve(arguments[0].data)}),e.promise}function g(){var e=t.defer();return console.log("getOutGoingNumbering",arguments[0]),n.get("/ivr/getoutgoingnumbering").then(function(){e.resolve(arguments[0].data)}),e.promise}var d=this;return d.contactNets=[],d.get=o,d.getById=a,d.getSpeech=r,d.getStreamSpeech=s,d.getStrategies=u,d.getVoices=i,d.getOutGoing=l,d.getOutGoingNumbering=g,d.getSupervisors=c,d}t.$inject=["$q","$cnMocks","$http"],angular.module("virtual-center").service("$cnContactNets",t)}(),function(){"use strict";function t(t,e){function n(){var n=t.defer();return a?n.resolve(a):e.get("languages").then(function(){a=arguments[0],n.resolve(a)}),n.promise}var o=this,a=!1;return o.get=n,o}t.$inject=["$q","$cnMocks"],angular.module("virtual-center").service("$cnLanguages",t)}(),function(){"use strict";function t(t,e){function n(){var n=t.defer();return a?n.resolve(a):e.getById("menu","MENU").then(function(){a=arguments[0],n.resolve(a)}),n.promise}var o=this,a=!1;return o.get=n,o}t.$inject=["$q","$cnMocks"],angular.module("virtual-center").service("$cnMenu",t)}(),function(){"use strict";function t(t,e){function n(){var n=t.defer();return e.get("/ivr/getpausestatus").then(function(){n.resolve(arguments[0].data)},function(){n.reject(arguments[0].data)}),n.promise}function o(){var n=arguments,o=t.defer();return~n[0].id?n[0].action="MOD":n[0].action="ADD",e.post("/ivr/savepausestatus",n[0]).then(function(){o.resolve(arguments[0].data)},function(){o.reject(arguments[0].data)}),o.promise}function a(){var n=arguments,o=t.defer();return e.post("/ivr/getcontactnetsusedbypausestatus/",{id:n[0].id}).then(function(){o.resolve(arguments[0].data)},function(){o.reject(arguments[0].data)}),o.promise}function r(){var n=t.defer();return e.post("/ivr/deletepausestatus",{id:arguments[0].id}).then(function(){n.resolve(arguments[0].data)},function(){n.reject(arguments[0].data)}),n.promise}var c=this;return c.pauseStatus=[],c.get=n,c.getContactnets=a,c.save=o,c.remove=r,c}t.$inject=["$q","$http"],angular.module("virtual-center").service("$cnPauseStatus",t)}(),function(){"use strict";function t(t,e){function n(){var n=t.defer();return e.get("/ivr/getqualifications").then(function(){n.resolve(arguments[0].data)},function(){n.reject(arguments[0].data)}),n.promise}function o(){var n=arguments,o=t.defer();return e.post("/ivr/getcontactnetsusedbyqualification/",{id:n[0].id}).then(function(){o.resolve(arguments[0].data)},function(){o.reject(arguments[0].data)}),o.promise}function a(){var n=arguments,o=t.defer();return~n[0].id?n[0].action="MOD":n[0].action="ADD",e.post("/ivr/savequalification",n[0]).then(function(){o.resolve(arguments[0].data)},function(){o.reject(arguments[0].data)}),o.promise}function r(){var n=t.defer();return e.post("/ivr/deletequalification",{id:arguments[0].id}).then(function(){n.resolve(arguments[0].data)},function(){n.reject(arguments[0].data)}),n.promise}var c=this;return c.qualifications=[],c.get=n,c.getContactnets=o,c.save=a,c.remove=r,c}t.$inject=["$q","$http"],angular.module("virtual-center").service("$cnQualifications",t)}(),function(){"use strict";function t(t,e){function n(){var n=t.defer();return e.get("/ivr/getconfiguration").then(function(){n.resolve(arguments[0].data)}),n.promise}function o(){var n=arguments,o=t.defer();return e.post("/ivr/saveconfigurationmultimedia",n[0]).then(function(){o.resolve(arguments[0].data)}),o.promise}function a(){var n=arguments,o=t.defer();return e.post("/ivr/duplicateconfig",{configurationId:n[0],configurationName:n[1]}).then(function(){o.resolve(arguments[0].data)}),o.promise}function r(){var n=t.defer();return e.post("/ivr/deleteconfiguration",{id:arguments[0].id}).then(function(){n.resolve(arguments[0].data)}),n.promise}function c(){var n=t.defer();return e.post("/ivr/getmultimediatree",{id:arguments[0]}).then(function(){n.resolve(arguments[0].data)}),n.promise}var i=this;return i.rules=[],i.get=n,i.getById=c,i.save=o,i.duplicate=a,i.remove=r,i}t.$inject=["$q","$http"],angular.module("virtual-center").service("$cnRules",t)}(),function(){"use strict";function t(t,e){function n(){var n=t.defer();return e.get("/ivr/getskills").then(function(){n.resolve(arguments[0].data)},function(){n.reject(arguments[0].data)}),n.promise}function o(){var n=arguments,o=t.defer();return e.post("/ivr/getcontactnetsusedbyskill/",{id:n[0].id}).then(function(){o.resolve(arguments[0].data)},function(){o.reject(arguments[0].data)}),o.promise}function a(){var n=arguments,o=t.defer();return~n[0].id?n[0].action="MOD":n[0].action="ADD",e.post("/ivr/saveskill",n[0]).then(function(){o.resolve(arguments[0].data)},function(){o.reject(arguments[0].data)}),o.promise}function r(){var n=t.defer();return e.post("/ivr/deleteskill",{id:arguments[0].id}).then(function(){n.resolve(arguments[0].data)},function(){n.reject(arguments[0].data)}),n.promise}function c(){var e=t.defer();return $cnMocks.get("skillsId").then(function(){e.resolve(arguments[0])}),e.promise}var i=this;return i.skills=[],i.get=n,i.getContactnets=o,i.save=a,i.remove=r,i.getById=c,i}t.$inject=["$q","$http"],angular.module("virtual-center").service("$cnSkills",t)}(),function(){"use strict";function t(t){function e(t,e,n,o){}function n(e){console.log(e),e.contactnet.contactNetInfo.voiceChannelParams.notifications=e.contactnet.contactNetInfo.voiceChannelParams.notifications||[],e.contactnet.contactNetInfo.voiceChannelParams.outgoingConfiguration=e.contactnet.contactNetInfo.voiceChannelParams.outgoingConfiguration||{},e.contactnet.contactNetInfo.voiceChannelParams.outgoingConfiguration.outgoingConfig=e.contactnet.contactNetInfo.voiceChannelParams.outgoingConfiguration.outgoingConfig||[],t.getStrategies(e.contactnet.contactNetInfo.voiceChannelParams.channelId).then(function(){e.contactnet.contactNetInfo.voiceChannelParams.strategies=arguments[0],console.log("getStrategies",arguments[0])}),t.getOutGoingNumbering().then(function(){e.contactnet.contactNetInfo.voiceChannelParams.ani=arguments[0],console.log("getOutGoingNumbering",arguments[0])}),t.getSpeech().then(function(){console.log("SPEECHS",arguments[0]),e.contactnet.contactNetInfo.voiceChannelParams.speechs=arguments[0]}),t.getOutGoing().then(function(){console.log("getOutGoing",arguments[0]),e.contactnet.contactNetInfo.voiceChannelParams.outGoing=arguments[0]}),e.onSpeechChange=function(){console.log(e.contactnet),console.log("HA CAMBIADO",arguments[0])}}n.$inject=["$scope"];var o={restrict:"EA",scope:{contactnet:"=",ngModel:"="},link:e,templateUrl:"/contactNetConfig/modules/contactNets/directives/cnContactNetChannelsConfig/cnContactNetChannelsConfig.html",controller:n};return o}t.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnContactNetChannelsConfig",t)}(),function(){"use strict";function t(t){function e(t,e,n,o){}function n(t){}n.$inject=["$scope"];var o={restrict:"EA",scope:!1,link:e,templateUrl:"/contactNetConfig/modules/contactNets/directives/cnContactNetMailCardChannelConfiguration/cnContactNetMailCardChannelConfiguration.html",controller:n};return o}t.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnContactNetMailCardChannelConfiguration",t)}(),function(){"use strict";function t(t){function e(t,e,n,o){}function n(t){}n.$inject=["$scope"];var o={restrict:"EA",scope:!1,link:e,templateUrl:"/contactNetConfig/modules/contactNets/directives/cnContactNetChatCardChannelConfiguration/cnContactNetChatCardChannelConfiguration.html",controller:n};return o}t.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnContactNetChatCardChannelConfiguration",t)}(),function(){"use strict";function t(t){function e(t,e,n,o){}function n(t){}n.$inject=["$scope"];var o={restrict:"EA",scope:!1,link:e,templateUrl:"/contactNetConfig/modules/contactNets/directives/cnContactNetTwitterCardChannelConfiguration/cnContactNetTwitterCardChannelConfiguration.html",controller:n};return o}t.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnContactNetTwitterCardChannelConfiguration",t)}(),function(){"use strict";function t(t){function e(t,e,n,o){console.log("voiceCard",t)}function n(e){e.onTypeNotificationChange=function(){var e=arguments;console.log("arguments onTypeNotificationChange",e);var n={ADVERTISEMENT:"getSpeech",QUEUEMEMBER_POSITION:"getVoices",QUEUEMEMBER_TIME:"getVoices"};t[n[e[0]]](e[0]).then(function(){console.log("arguments "+n[e[0]],arguments[0]),e[1].selectConfig=arguments[0]})}}n.$inject=["$scope"];var o={restrict:"EA",scope:{contactnet:"=",ngModel:"="},link:e,templateUrl:"/contactNetConfig/modules/contactNets/directives/cnContactNetVoiceCardChannelConfiguration/cnContactNetVoiceCardChannelConfiguration.html",controller:n};return o}t.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnContactNetVoiceCardChannelConfiguration",t)}(),function(){"use strict";function t(){function t(t,e,n,o){function a(){for(var e=[],n=0;n<t.agents.length;n++)~t.agents[n].name.indexOf(arguments[0])&&e.push(t.agents[n]);return e}console.log("cnSupervisorsConfig",t),t.filterSelected=!0,t.querySearch=a,t.filterAgents=[]}function e(t){}e.$inject=["$scope"];var n={restrict:"EA",scope:{supervisor:"=",agents:"=",ngOpenCard:"="},link:t,templateUrl:"/contactNetConfig/modules/core/directives/cnAgentsBySupervisor/cnAgentsBySupervisor.html",controller:e};return n}angular.module("virtual-center").directive("cnAgentsBySupervisor",t)}(),function(){"use strict";function t(t){function e(t,e,n,o){console.log("SCOPE AUDIO",t);var a=e[0].querySelector("audio");t.$watch("src",function(){a.src="/home/stream/streamspeech?id="+arguments[0]}),a.addEventListener("canplay",function(){console.log("canplay"),t.$apply(function(){t.isError=!1})}),a.addEventListener("waiting",function(){console.log("waiting"),t.$apply(function(){t.mediaConfig={isLoaded:!1}})}),a.addEventListener("ended",function(){console.log("ERROR al intentar reproducir el audio",arguments[0]),t.$apply(function(){t.isPlaying=!1})}),a.addEventListener("error",function(){console.log("ERROR al intentar reproducir el audio",arguments[0]),t.$apply(function(){t.isPlaying=!1,t.isError=!0})}),t.actionPlaying=function(){t.isPlaying?t.stop():t.play()},t.play=function(){a.play(),t.isPlaying=!0},t.stop=function(){a.currentTime=0,a.pause(),t.isPlaying=!1},t.pause=function(){a.pause()}}var n={restrict:"EA",scope:{src:"="},link:e,templateUrl:"/contactNetConfig/modules/core/directives/cnAudio/cnAudio.html"};return n}t.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnAudio",t)}(),function(){"use strict";function t(){function t(t,e,n,o){t.changeColor=function(e){if(t.ngModel!=e&&!t.ngDisabled){var n=t.ngModel;t.ngModel=e,t.onColorChanged({newColor:e,oldColor:n})}}}return t.$inject=["scope","element","attr","ctrl"],{restrict:"E",templateUrl:"/contactNetConfig/modules/core/directives/cnColorPicker/cnColorPicker.html",link:t,scope:{options:"=",ngModel:"=",onColorChanged:"&",ngDisabled:"="}}}angular.module("virtual-center").directive("cnColorPicker",t)}(),function(){"use strict";function t(){function t(t,n){function o(){function t(){o.textarea||(n=document.createElement("div"),n.id="simulate-clipboard-container",n.setAttribute("style",["position: fixed;","left: 0px;","top: 0px;","width: 0px;","height: 0px;","z-index: 100;","opacity: 0;","display: block;"].join("")),document.body.appendChild(n),e=document.createElement("textarea"),e.setAttribute("style",["width: 1px;","height: 1px;","padding: 0px;"].join("")),e.id="simulate-clipboard",o.textarea=e,n.appendChild(e))}var e,n,o=this;t()}o.prototype.copy=function(){this.textarea.innerHTML="",this.textarea.appendChild(document.createTextNode(t.cnCopy)),this.textarea.focus(),this.textarea.select(),setTimeout(function(){document.execCommand("copy")},20)},e=new o,n[0].addEventListener("click",function(){e.copy()})}var e;return{restrict:"A",link:t,scope:{cnCopy:"="}}}angular.module("virtual-center").directive("cnCopy",t)}(),function(){"use strict";function t(t,e){function n(t,e,n,o){function a(){cnCreateContactNet.createContactNet()}e.on("click",a)}var o={restrict:"EA",scope:{},link:n};return o}function e(t){function e(){console.log("lasldglasdg",t.contactNets),t.contactNets.splice(0,0,{id:n(1,50),description:"Nuevo ContactNet",queueType:"BOTH",isACD:1,openCard:!0,modificable:!0,channels:{1:1,2:2,3:3}}),t.getById().then(function(){t.contactNets[0].contactNetInfo=arguments[0]})}function n(){return Math.floor(Math.random()*arguments[1])+arguments[0]}var o=this;return o.createContactNet=e,o}t.$inject=["$cnContactNets","$cnCreateContactNet"],e.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnCreateContactNet",t).service("$cnCreateContactNet",e)}(),function(){"use strict";function t(t){function e(e,n,o,a){function r(){console.log("lasldglasdg",t.rules),t.rules.splice(0,0,{id:c(1,50),description:"Nueva Regla",openCard:!0,modificable:!0}),t.getById().then(function(){t.rules[0].RuleInfo=arguments[0]})}function c(){return Math.floor(Math.random()*arguments[1])+arguments[0]}n.on("click",r)}var n={restrict:"EA",scope:{},link:e};return n}t.$inject=["$cnRules"],angular.module("virtual-center").directive("cnCreateRule",t)}(),function(){"use strict";function t(t){function e(e,n,o,a){function r(){t.path(o.cnNavigate),e.$apply()}n.css("cursor","pointer"),n.on("click",r)}var n={restrict:"A",scope:{cnNavigate:"@"},link:e};return n}function e(t){function e(){arguments[0]&&t.path(arguments[0])}var n=this;n.path=e}t.$inject=["$cnNavigate"],e.$inject=["$location"],angular.module("virtual-center").directive("cnNavigate",t).service("$cnNavigate",e)}(),function(){"use strict";function t(t){function e(e,n,o,a){function r(){"button"!==arguments[0].target.localName&&angular.forEach(t.channels,function(){var n=arguments;n[0].multimediaId==e.channel.multimediaId&&(t.channels[n[1]].downloadedData?t.channels[n[1]].openCard=!t.channels[n[1]].openCard:(t.channels[n[1]].openCard=!t.channels[n[1]].openCard,t.channels[n[1]].downloadedData=!0),e.$apply())})}n.on("click",r)}var n={restrict:"EA",scope:{channel:"=cnChannelInfo"},link:e};return n}t.$inject=["$cnChannels"],angular.module("virtual-center").directive("cnOpenChannels",t)}(),function(){"use strict";function t(t){function e(e,n,o,a){function r(){var n=e.contactNet;angular.forEach(t.contactNets,function(){var o=arguments;o[0].id==n.id&&(t.contactNets[o[1]].contactNetInfo?(t.contactNets[o[1]].contactNetInfo=null,t.contactNets[o[1]].openCard=!t.contactNets[o[1]].openCard):(t.contactNets[o[1]].openCard=!t.contactNets[o[1]].openCard,t.getById(n.id).then(function(){console.log("ELEMENT",arguments[0]),t.contactNets[o[1]].contactNetInfo=arguments[0]})),e.$apply())})}n.on("click",r)}var n={restrict:"EA",scope:{contactNet:"=cnContactNetInfo"},link:e};return n}t.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnOpenContactNets",t)}(),function(){"use strict";function t(t){function e(e,n,o,a){function r(){"button"!==arguments[0].target.localName&&angular.forEach(t.rules,function(){var n=arguments;n[0].id==e.rule.id&&(t.rules[n[1]].downloadedData?t.rules[n[1]].openCard=!t.rules[n[1]].openCard:(t.rules[n[1]].openCard=!t.rules[n[1]].openCard,t.getById(t.rules[n[1]].id).then(function(){t.rules[n[1]]=arguments[0],t.rules[n[1]].downloadedData=!0,t.rules[n[1]].openCard=!t.rules[n[1]].openCard,console.log(t.rules,t.rules[n[1]])})),e.$apply())})}n.on("click",r)}var n={restrict:"EA",scope:{rule:"=cnRuleInfo"},link:e};return n}t.$inject=["$cnRules"],angular.module("virtual-center").directive("cnOpenRules",t)}(),function(){"use strict";function t(t,e){function n(t,e,n,o){function a(){r.scrollTop&&r.scrollTop>240?e[0].classList.contains("filterSearchExpanded")||e[0].classList.add("filterSearchExpanded"):e[0].classList.contains("filterSearchExpanded")&&e[0].classList.remove("filterSearchExpanded")}var r=document.querySelector('[role="main"]');r.addEventListener("scroll",a),t.$on("$destroy",function(){r.removeEventListener("scroll",a)})}var o={restrict:"EA",scope:{},link:n};return o}t.$inject=["$timeout","$document"],angular.module("virtual-center").directive("cnScroll",t)}(),function(){"use strict";function t(t){function e(e,n,o,a){t.getSupervisors().then(function(){console.log("getSupervisors",arguments[0]),e.contactnet.contactNetInfo.supervisors=arguments[0]})}function n(t){console.log("cnSupervisorsConfig",t)}n.$inject=["$scope"];var o={restrict:"EA",scope:{contactnet:"="},link:e,templateUrl:"/contactNetConfig/modules/core/directives/cnSupervisorsConfig/cnSupervisorsConfig.html",controller:n};return o}t.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnSupervisorsConfig",t)}(),function(){"use strict";function t(t){function e(t,e,n,o){console.log("cnSelectAgents",t)}function n(t){}n.$inject=["$scope"];var o={restrict:"EA",scope:{agents:"="},link:e,templateUrl:"/contactNetConfig/modules/core/directives/cnSelectAgents/cnSelectAgents.html",controller:n};return o}t.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnSelectAgents",t)}(),function(){"use strict";function t(t,e,n){function o(){var t=e.defer(),o=arguments;return n(function(){var e=[];angular.forEach(u.bbdd[o[0]],function(){e.push(arguments[0])}),t.resolve(e)},c(200,500)),t.promise}function a(){var t=e.defer(),o=arguments;return n(function(){t.resolve(u.bbdd[o[0]][o[1]]||!1)},c(200,500)),t.promise}function r(){var t=e.defer(),o=arguments;return n(function(){if(void 0===o[2]){var e=c(1e3,9999);o[1].id=e,t.resolve(u.bbdd[o[0]][e]=o[1])}else t.resolve(u.bbdd[o[0]][o[2]]=o[1])},c(300,500)),t.promise}function c(){return Math.floor(Math.random()*arguments[1])+arguments[0]}function i(){for(var e=0;e<s.length;e++)!function(e){var n=arguments;t.get("/contactNetConfig/modules/core/services/mocks/json/"+n[0]+".json").success(function(){u.bbdd[n[0]]=arguments[0]})}(s[e])}var s=["menu","listContactNets","contactNetId","channels","rules","rulesId","languages","channels","channelsId"],u=this;return u.bbdd={},u.get=o,u.getById=a,u.set=r,i(),u}t.$inject=["$http","$q","$timeout"],angular.module("virtual-center").service("$cnMocks",t)}(),function(){"use strict";function t(){function t(t,e,n,o){}function e(t,e,n,o,a){function r(){e.get().then(function(){t.pause_states=arguments[0],u=angular.copy(t.pause_states),t.downloadedData=!0})}function c(){t.pause_states.push({id:-1,label:"",modificable:!0})}function i(){var a=[];angular.forEach(t.pause_states,function(){var o=arguments;"DEL"===o[0].action?-1!==o[0].id&&a.push(e.remove(o[0]).then(function(){t.pause_states.splice(o[1],1)},function(){delete t.pause_states[o[1]].action})):(-1===o[0].id||n("filter")(u,{id:o[0].id})[0].label!==o[0].label)&&a.push(e.save(o[0]).then(function(){t.pause_states[o[1]].id=arguments[0].id}))}),o.all(a).then(function(){t.card.openCard=!1})}function s(){var t=arguments;e.getContactnets(t[0]).then(function(){arguments[0].length?a.show(a.simple().textContent("Estado en uso por "+arguments[0].length+" contactNet"+(1==arguments[0].length?"":"s")).position("bottom left").hideDelay(2500)):t[0].action="DEL"})}var u=[];t.pause_states=[],t.addNew=c,t.remove=s,t.save=i,r()}e.$inject=["$scope","$cnPauseStatus","$filter","$q","$mdToast"];var n={restrict:"EA",scope:{downloadedData:"=",card:"="},link:t,templateUrl:"/contactNetConfig/modules/repos/directives/pause_states/pause_states.html",controller:e};return n}angular.module("virtual-center").directive("cnRepoPauseStates",t)}(),function(){"use strict";function t(){function t(t,e,n,o){}function e(t,e,n,o,a){function r(){e.get().then(function(){t.categories=arguments[0],u=angular.copy(t.categories),t.downloadedData=!0})}function c(){t.categories.push({id:-1,label:"",modificable:!0})}function i(){var a=[];angular.forEach(t.categories,function(){var o=arguments;"DEL"===o[0].action?-1!==o[0].id&&a.push(e.remove(o[0]).then(function(){t.categories.splice(o[1],1)},function(){delete t.categories[o[1]].action})):(-1===o[0].id||n("filter")(u,{id:o[0].id})[0].label!==o[0].label)&&a.push(e.save(o[0]).then(function(){t.categories[o[1]].id=arguments[0].id}))}),o.all(a).then(function(){t.card.openCard=!1})}function s(){var t=arguments;e.getContactnets(t[0]).then(function(){arguments[0].length?a.show(a.simple().textContent("Categoría en uso por "+arguments[0].length+" contactNet"+(1==arguments[0].length?"":"s")).position("bottom left").hideDelay(2500)):t[0].action="DEL"})}var u=[];t.categories=[],t.addNew=c,t.remove=s,t.save=i,r()}e.$inject=["$scope","$cnCategories","$filter","$q","$mdToast"];var n={restrict:"EA",scope:{downloadedData:"=",card:"="},link:t,templateUrl:"/contactNetConfig/modules/repos/directives/categorizations/categorizations.html",controller:e};return n}angular.module("virtual-center").directive("cnRepoCategorizations",t);
}(),function(){"use strict";function t(){function t(t,e,n,o){}function e(t,e,n,o,a){function r(){e.get().then(function(){t.qualifications=arguments[0],u=angular.copy(t.qualifications),t.downloadedData=!0})}function c(){t.qualifications.push({id:-1,label:"",value:"POSITIVE",modificable:!0})}function i(){var a=[];angular.forEach(t.qualifications,function(){var o=arguments;"DEL"===o[0].action?-1!==o[0].id&&a.push(e.remove(o[0]).then(function(){t.qualifications.splice(o[1],1)},function(){delete t.qualifications[o[1]].action})):(-1===o[0].id||n("filter")(u,{id:o[0].id})[0].label!==o[0].label)&&a.push(e.save(o[0]).then(function(){t.qualifications[o[1]].id=arguments[0].id}))}),o.all(a).then(function(){t.card.openCard=!1})}function s(){var t=arguments;e.getContactnets(t[0]).then(function(){arguments[0].length?a.show(a.simple().textContent("Cualificación en uso por "+arguments[0].length+" contactNet"+(1==arguments[0].length?"":"s")).position("bottom left").hideDelay(2500)):t[0].action="DEL"})}var u=[];t.qualifications=[],t.addNew=c,t.remove=s,t.save=i,r()}e.$inject=["$scope","$cnQualifications","$filter","$q","$mdToast"];var n={restrict:"EA",scope:{downloadedData:"=",card:"="},link:t,templateUrl:"/contactNetConfig/modules/repos/directives/qualifications/qualifications.html",controller:e};return n}angular.module("virtual-center").directive("cnRepoQualifications",t)}(),function(){"use strict";function t(t){function e(t,e,n,o){}function n(t,e,n,o,a){function r(){e.get().then(function(){t.skills=arguments[0],u=angular.copy(t.skills),t.downloadedData=!0})}function c(){t.skills.push({id:-1,label:"",modificable:!0})}function i(){var a=[];angular.forEach(t.skills,function(){var o=arguments;"DEL"===o[0].action?-1!==o[0].id&&a.push(e.remove(o[0]).then(function(){t.skills.splice(o[1],1)},function(){delete t.skills[o[1]].action})):(-1===o[0].id||n("filter")(u,{id:o[0].id})[0].label!==o[0].label)&&a.push(e.save(o[0]).then(function(){t.skills[o[1]].id=arguments[0].id}))}),o.all(a).then(function(){t.card.openCard=!1})}function s(){var t=arguments;e.getContactnets(t[0]).then(function(){arguments[0].length?a.show(a.simple().textContent("Skill en uso por "+arguments[0].length+" contactNet"+(1==arguments[0].length?"":"s")).position("bottom left").hideDelay(2500)):t[0].action="DEL"})}var u=[];t.skills=[],t.addNew=c,t.remove=s,t.save=i,r()}n.$inject=["$scope","$cnSkills","$filter","$q","$mdToast"];var o={restrict:"EA",scope:{downloadedData:"=",card:"="},link:e,templateUrl:"/contactNetConfig/modules/repos/directives/skills/skills.html",controller:n};return o}t.$inject=["$timeout"],angular.module("virtual-center").directive("cnRepoSkills",t)}(),function(){"use strict";function t(t){function e(t,e,n,o){}function n(t){function e(){arguments[0].rules.push({evaluationMode:"1",type:"21",data:[{Category_Id:"2",Description:"Alta Orange"}],multiRule:!0})}t.addCategorization=e}n.$inject=["$scope"];var o={restrict:"EA",scope:{routingRule:"=cnRoutingRules",channelId:"=cnChannelId",vocabulary:"=cnVocabulary"},link:e,templateUrl:"/contactNetConfig/modules/rules/directives/routingRules/routingRules.html",controller:n};return o}t.$inject=["$cnRules"],angular.module("virtual-center").directive("cnRoutingRules",t)}(),function(){"use strict";function t(t,e){function n(t,e,n,o){function a(){console.log(n)}a()}var o={restrict:"EA",scope:{rule:"=cnRule",vocabulary:"=cnVocabulary"},templateUrl:"/contactNetConfig/modules/rules/directives/categorization/categorization.html",link:n};return o}t.$inject=["$cnLanguages","$filter"],angular.module("virtual-center").directive("cnCategorization",t)}(),function(){"use strict";function t(t,e){function n(n,o,a,r){function c(){var t=angular.copy(arguments[0]);t.selected?(delete t.selected,n.rule.rules[s].data.push(t)):angular.forEach(n.rule.rules[s].data,function(){arguments[0].Language_Id==t.Language_Id&&n.rule.rules[s].data.splice(arguments[1],1)})}function i(){t.get().then(function(){n.languages=arguments[0],angular.forEach(n.languages,function(){var t=angular.copy(e("filter")(n.rule.rules[s].data,{Language_Id:arguments[0].Language_Id}));t.length?n.languages[arguments[1]].selected=!0:n.languages[arguments[1]].selected=!1})}),angular.forEach(n.rule.rules,function(){20==arguments[0].type&&(s=arguments[1])}),s===!1&&(s=n.rule.rules.length,n.rule.rules.push({evaluationMode:"1",type:"20",data:[],multiRule:!0}))}n.languages=[],n.toggleLanguage=c;var s=!1;i()}var o={restrict:"EA",scope:{rule:"=cnRule"},templateUrl:"/contactNetConfig/modules/rules/directives/selectLanguages/selectLanguages.html",link:n};return o}t.$inject=["$cnLanguages","$filter"],angular.module("virtual-center").directive("cnSelectLanguages",t)}(),function(){"use strict";function t(t,e){function n(n,o,a,r){function c(){var t=[];angular.forEach(n.rule.destinations,function(){var n=angular.copy(e("filter")(u,{id:arguments[0]}));n.length&&(n[0].selected=!0,t.push(n[0]))}),angular.forEach(u,function(){~n.rule.destinations.indexOf(arguments[0].id)||t.push(arguments[0])}),n.contactNets=t}function i(){arguments[0].selected?n.rule.destinations.push(arguments[0].id):n.rule.destinations.splice(n.rule.destinations.indexOf(arguments[0].id),1),c()}function s(){var t=(arguments,n.rule.destinations.indexOf(arguments[0].id));n.rule.destinations.splice(t,1),arguments[1]?n.rule.destinations.splice(t-1,0,arguments[0].id):n.rule.destinations.splice(t+1,0,arguments[0].id),c()}var u=[];n.contactNets=[],n.moveContactNet=s,n.selectCN=i,t.get().then(function(){u=arguments[0],c()})}var o={restrict:"EA",scope:{rule:"=cnRule",channelId:"=cnChannelId"},templateUrl:"/contactNetConfig/modules/rules/directives/selectOrderContactNet/selectOrderContactNet.html",link:n};return o}t.$inject=["$cnContactNets","$filter"],angular.module("virtual-center").directive("cnSelectOrderContactNet",t)}();