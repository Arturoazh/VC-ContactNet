!function(){"use strict";angular.module("virtual-center",["ui.router","ngSanitize","ngAnimate","ngAria","ngMaterial"])}(),function(){"use strict";function e(e,t){var n=e.extendPalette("blue",{100:"#E0F2FA",200:"#AFDDF3",300:"#71C3E9",400:"#57B7E5",500:"#3CACE1",600:"#22A1DC",700:"#1E8DC2",800:"#1A7AA7",900:"#16678D",A100:"#AFDDF3",A200:"#3CACE1",A400:"#57B7E5",A700:"#1E8DC2"});e.definePalette("blueVC",n),e.theme("default").primaryPalette("grey").accentPalette("blueVC").warnPalette("red"),t.icon("add","/contactNetConfig/assets/icons/add.svg").icon("arrow_downward","/contactNetConfig/assets/icons/arrow_downward.svg").icon("arrow_upward","/contactNetConfig/assets/icons/arrow_upward.svg").icon("menu","/contactNetConfig/assets/icons/menu.svg").icon("more_vert","/contactNetConfig/assets/icons/more_vert.svg").icon("contactnets","/contactNetConfig/assets/icons/contactnets.svg").icon("channels","/contactNetConfig/assets/icons/channels.svg").icon("rules","/contactNetConfig/assets/icons/rules.svg").icon("twitter","/contactNetConfig/assets/icons/twitter.svg").icon("mail","/contactNetConfig/assets/icons/mail.svg").icon("message","/contactNetConfig/assets/icons/message.svg").icon("phone","/contactNetConfig/assets/icons/phone.svg").icon("shape","/contactNetConfig/assets/icons/shape.svg").icon("insert","/contactNetConfig/assets/icons/insert-drive-file.svg").icon("edit","/contactNetConfig/assets/icons/edit.svg").icon("search","/contactNetConfig/assets/icons/search.svg").icon("delete","/contactNetConfig/assets/icons/delete.svg").icon("repos","/contactNetConfig/assets/icons/repos.svg").icon("skills","/contactNetConfig/assets/icons/skills.svg").icon("pause_state","/contactNetConfig/assets/icons/pause_state.svg").icon("school","/contactNetConfig/assets/icons/school.svg").icon("local_offer","/contactNetConfig/assets/icons/local_offer.svg")}e.$inject=["$mdThemingProvider","$mdIconProvider"],angular.module("virtual-center").config(e)}(),function(){"use strict";function e(e,t,n,o,c,a,r,i){function s(){var e=arguments;return function(){o(e[0]).toggle()}}t.toggleLeft=s("left"),t.menu={},t.cnNavigate=a,t.environment={},e.fab={isOpen:!1,trigger:{icon:"add",action:function(){}},actions:[]},t.isOpenLeft=function(){return o("left").isOpen()},c.get().then(function(){console.log("arguments",arguments[0]),t.menu=arguments[0]}),e.$on("$stateChangeSuccess",function(){switch(e.fab.isOpen=!1,e.fab.actions=[],arguments[1].url){case"/contactnets":t.selectedIndex=0,t.environment.actualSection="ContactNets";break;case"/channels":t.selectedIndex=1,t.environment.actualSection="Reglas";break;case"/rules":t.selectedIndex=2,t.environment.actualSection="Canales";break;case"/repos":t.selectedIndex=3,t.environment.actualSection="Repositorio"}})}e.$inject=["$rootScope","$scope","$timeout","$mdSidenav","$cnMenu","$cnNavigate","$location","$interval"],angular.module("virtual-center").controller("appController",e)}(),function(){"use strict";function e(e,t){e.state("contactnets",{"abstract":!0,templateUrl:"/contactNetConfig/layout.html"}).state("contactnets.contatNetConfig",{url:"/contactnets",templateUrl:"/contactNetConfig/modules/contactNets/contactNets.html",controller:"contactNetsController"}).state("contactnets.channels",{url:"/channels",templateUrl:"/contactNetConfig/modules/channels/channels.html",controller:"channelsController"}).state("contactnets.rules",{url:"/rules",templateUrl:"/contactNetConfig/modules/rules/rules.html",controller:"rulesController"}).state("contactnets.repos",{url:"/repos",templateUrl:"/contactNetConfig/modules/repos/repos.html",controller:"reposController"}),t.otherwise("/contactnets")}e.$inject=["$stateProvider","$urlRouterProvider"],angular.module("virtual-center").config(e)}(),function(){"use strict";function e(e,t,n,o,c){function a(){o.channels.unshift({multimedia:"Nuevo Phone",downloadedData:!0,openCard:!0,multimediaId:(new Date).getTime(),channelId:1,configModificable:!1})}function r(){o.channels.unshift({multimedia:"Nuevo Chat",downloadedData:!0,openCard:!0,multimediaId:(new Date).getTime(),channelId:2,configModificable:!1,multimediaParams:{ChatType:"Chat",ChatConfig:{templateId:1,authenticationText:"",authenticationMode:"anonymous",loadingMode:"closed",headerText:"",welcomeText:"",resetText:"",connectText:"",primaryBackgroundColor:"CCCCCC",secundaryBackgroundColor:"FF0000",primaryColor:"000000",secundaryColor:"FFFFFF"}}})}function i(){o.channels.unshift({multimedia:"Nuevo Mail",downloadedData:!0,openCard:!0,multimediaId:(new Date).getTime(),channelId:3,configModificable:!1,multimediaParams:{MailType:"SendGrid",MailConfig:{}}})}function s(){e.fab.isOpen=!0}function u(){console.log(arguments[0])}t.contactNets=[],t.colorOptions=["FFFFFF","FF8A80","FFD180","FFFF8D","CFD8DC","80D8FF","A7FFEB","CCFF90"],t.scriptCode='<script>console.log("empty");</script>',t.$cnChannels=o,t.save=u,t.openFab=s,e.fab.trigger.action=function(){},e.fab.actions=[{icon:"phone",action:a},{icon:"message",action:r},{icon:"mail",action:i}],o.get().then(function(){})}e.$inject=["$rootScope","$scope","$cnContactNets","$cnChannels","$filter"],angular.module("virtual-center").controller("channelsController",e)}(),function(){"use strict";function e(e,t,n,o){t.contactNetsService=n,e.fab.trigger.action=o.createContactNet,n.get().then(function(){n.contactNets=arguments[0]})}e.$inject=["$rootScope","$scope","$cnContactNets","$cnCreateContactNet"],angular.module("virtual-center").controller("contactNetsController",e)}(),function(){"use strict";function e(e,t,n,o,c){function a(){t.repos[arguments[0]].openCard=!t.repos[arguments[0]].openCard}function r(){console.log(arguments[0])}t.repos={cualification:{icon:"school",title:"Cualificaciones de casos",openCard:!1,downloadedData:!1},categorization:{icon:"local_offer",title:"Categorizaci√≥n de casos",openCard:!1,downloadedData:!1},pause_state:{icon:"pause_state",title:"Estados de pausa",openCard:!1,downloadedData:!1},skills:{icon:"skills",title:"Skills de agentes",openCard:!1,downloadedData:!1}},t.save=r,t.open=a,e.fab.hide=!0}e.$inject=["$rootScope","$scope","$cnContactNets","$cnChannels","$filter"],angular.module("virtual-center").controller("reposController",e)}(),function(){"use strict";function e(e,t,n,o,c){function a(){arguments[0].routingRules.push({name:"nueva regla",openCard:!0,destinations:[],rules:[]})}function r(){console.log("ar"),o.rules.unshift({id:(new Date).getTime(),name:"Nuevo grupo de reglas",downloadedData:!0,openCard:!0,configModificable:!1,vocabulary:[],routingRules:[]})}function i(){console.log(arguments[0])}t.contactNets=[],t.$cnRules=o,e.fab.trigger.action=r,t.addNew=r,t.addRoutingRule=a,t.save=i,o.get().then(function(){})}e.$inject=["$rootScope","$scope","$cnContactNets","$cnRules","$filter"],angular.module("virtual-center").controller("rulesController",e)}(),function(){"use strict";function e(e,t){function n(){var n=e.defer();return t.get("channels").then(function(){n.resolve(arguments[0])}),n.promise}function o(){var n=e.defer();return t.get("channelsId").then(function(){n.resolve(arguments[0])}),n.promise}var c=this;return c.channels=[],c.get=n,c.getById=o,c}e.$inject=["$q","$cnMocks"],angular.module("virtual-center").service("$cnChannels",e)}(),function(){"use strict";function e(e,t,n){function o(){var t=e.defer();return n.get("/ivr/getcontactnets").then(function(){console.log("getcontactnets",arguments[0].data),t.resolve(arguments[0].data)}),t.promise}function c(){var t=e.defer();return console.log("ID Enviado",arguments[0]),n.post("/ivr/getcontactnetbyid",{id:arguments[0]}).then(function(){t.resolve(arguments[0].data)}),t.promise}function a(){var t=e.defer();return console.log("ID Enviado",arguments[0]),n.get("/ivr/getspeech/id/"+arguments[0]).then(function(){t.resolve(arguments[0].data)}),t.promise}var r=this;return r.contactNets=[],r.get=o,r.getById=c,r.getSpeech=a,r}e.$inject=["$q","$cnMocks","$http"],angular.module("virtual-center").service("$cnContactNets",e)}(),function(){"use strict";function e(e,t){function n(){var n=e.defer();return c?n.resolve(c):t.get("languages").then(function(){c=arguments[0],n.resolve(c)}),n.promise}var o=this,c=!1;return o.get=n,o}e.$inject=["$q","$cnMocks"],angular.module("virtual-center").service("$cnLanguages",e)}(),function(){"use strict";function e(e,t){function n(){var n=e.defer();return c?n.resolve(c):t.getById("menu","MENU").then(function(){c=arguments[0],n.resolve(c)}),n.promise}var o=this,c=!1;return o.get=n,o}e.$inject=["$q","$cnMocks"],angular.module("virtual-center").service("$cnMenu",e)}(),function(){"use strict";function e(e,t){function n(){var n=e.defer();return t.get("rules").then(function(){n.resolve(arguments[0])}),n.promise}function o(){var n=e.defer();return t.get("rulesId").then(function(){n.resolve(arguments[0])}),n.promise}var c=this;return c.rules=[],c.get=n,c.getById=o,c}e.$inject=["$q","$cnMocks"],angular.module("virtual-center").service("$cnRules",e)}(),function(){"use strict";function e(e){function t(e,t,n,o){}function n(e){}n.$inject=["$scope"];var o={restrict:"EA",scope:!1,link:t,templateUrl:"/contactNetConfig/modules/contactNets/directives/cnContactNetChatCardChannelConfiguration/cnContactNetChatCardChannelConfiguration.html",controller:n};return o}e.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnContactNetChatCardChannelConfiguration",e)}(),function(){"use strict";function e(e){function t(e,t,n,o){}function n(e){}n.$inject=["$scope"];var o={restrict:"EA",scope:!1,link:t,templateUrl:"/contactNetConfig/modules/contactNets/directives/cnContactNetMailCardChannelConfiguration/cnContactNetMailCardChannelConfiguration.html",controller:n};return o}e.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnContactNetMailCardChannelConfiguration",e)}(),function(){"use strict";function e(e){function t(e,t,n,o){}function n(e){}n.$inject=["$scope"];var o={restrict:"EA",scope:!1,link:t,templateUrl:"/contactNetConfig/modules/contactNets/directives/cnContactNetTwitterCardChannelConfiguration/cnContactNetTwitterCardChannelConfiguration.html",controller:n};return o}e.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnContactNetTwitterCardChannelConfiguration",e)}(),function(){"use strict";function e(e){function t(e,t,n,o){}function n(e){}n.$inject=["$scope"];var o={restrict:"EA",link:t,templateUrl:"/contactNetConfig/modules/contactNets/directives/cnContactNetVoiceCardChannelConfiguration/cnContactNetVoiceCardChannelConfiguration.html",controller:n};return o}e.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnContactNetVoiceCardChannelConfiguration",e)}(),function(){"use strict";function e(){function e(e,t,n,o){e.changeColor=function(t){if(e.ngModel!=t){var n=e.ngModel;e.ngModel=t,e.onColorChanged({newColor:t,oldColor:n})}}}return e.$inject=["scope","element","attr","ctrl"],{restrict:"E",templateUrl:"/contactNetConfig/modules/core/directives/cnColorPicker/cnColorPicker.html",link:e,scope:{options:"=",ngModel:"=",onColorChanged:"&"}}}angular.module("virtual-center").directive("cnColorPicker",e)}(),function(){"use strict";function e(){function e(e,n){function o(){function e(){o.textarea||(n=document.createElement("div"),n.id="simulate-clipboard-container",n.setAttribute("style",["position: fixed;","left: 0px;","top: 0px;","width: 0px;","height: 0px;","z-index: 100;","opacity: 0;","display: block;"].join("")),document.body.appendChild(n),t=document.createElement("textarea"),t.setAttribute("style",["width: 1px;","height: 1px;","padding: 0px;"].join("")),t.id="simulate-clipboard",o.textarea=t,n.appendChild(t))}var t,n,o=this;e()}o.prototype.copy=function(){this.textarea.innerHTML="",this.textarea.appendChild(document.createTextNode(e.cnCopy)),this.textarea.focus(),this.textarea.select(),setTimeout(function(){document.execCommand("copy")},20)},t=new o,n[0].addEventListener("click",function(){t.copy()})}var t;return{restrict:"A",link:e,scope:{cnCopy:"="}}}angular.module("virtual-center").directive("cnCopy",e)}(),function(){"use strict";function e(e){function t(t,n,o,c){function a(){console.log("lasldglasdg",e.rules),e.rules.splice(0,0,{id:r(1,50),description:"Nueva Regla",openCard:!0,modificable:!0}),e.getById().then(function(){e.rules[0].RuleInfo=arguments[0]})}function r(){return Math.floor(Math.random()*arguments[1])+arguments[0]}n.on("click",a)}var n={restrict:"EA",scope:{},link:t};return n}e.$inject=["$cnRules"],angular.module("virtual-center").directive("cnCreateRule",e)}(),function(){"use strict";function e(e,t){function n(e,t,n,o){function c(){cnCreateContactNet.createContactNet()}t.on("click",c)}var o={restrict:"EA",scope:{},link:n};return o}function t(e){function t(){console.log("lasldglasdg",e.contactNets),e.contactNets.splice(0,0,{id:n(1,50),description:"Nuevo ContactNet",queueType:"BOTH",isACD:1,openCard:!0,modificable:!0,channels:{1:1,2:2,3:3}}),e.getById().then(function(){e.contactNets[0].contactNetInfo=arguments[0]})}function n(){return Math.floor(Math.random()*arguments[1])+arguments[0]}var o=this;return o.createContactNet=t,o}e.$inject=["$cnContactNets","$cnCreateContactNet"],t.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnCreateContactNet",e).service("$cnCreateContactNet",t)}(),function(){"use strict";function e(e){function t(t,n,o,c){function a(){e.path(o.cnNavigate),t.$apply()}n.css("cursor","pointer"),n.on("click",a)}var n={restrict:"A",scope:{cnNavigate:"@"},link:t};return n}function t(e){function t(){arguments[0]&&e.path(arguments[0])}var n=this;n.path=t}e.$inject=["$cnNavigate"],t.$inject=["$location"],angular.module("virtual-center").directive("cnNavigate",e).service("$cnNavigate",t)}(),function(){"use strict";function e(e){function t(t,n,o,c){function a(){"button"!==arguments[0].target.localName&&angular.forEach(e.channels,function(){var n=arguments;n[0].channelId==t.channel.channelId&&(e.channels[n[1]].downloadedData?e.channels[n[1]].openCard=!e.channels[n[1]].openCard:(e.channels[n[1]].openCard=!e.channels[n[1]].openCard,e.getById().then(function(){e.channels[n[1]]=arguments[0][0],e.channels[n[1]].downloadedData=!0,e.channels[n[1]].openCard=!e.channels[n[1]].openCard,console.log(e.channels,e.channels[n[1]])})),t.$apply())})}n.on("click",a)}var n={restrict:"EA",scope:{channel:"=cnChannelInfo"},link:t};return n}e.$inject=["$cnChannels"],angular.module("virtual-center").directive("cnOpenChannels",e)}(),function(){"use strict";function e(e){function t(t,n,o,c){function a(){var n=t.contactNet;angular.forEach(e.contactNets,function(){var o=arguments;o[0].id==n.id&&(e.contactNets[o[1]].contactNetInfo?(e.contactNets[o[1]].contactNetInfo=null,e.contactNets[o[1]].openCard=!e.contactNets[o[1]].openCard):(e.contactNets[o[1]].openCard=!e.contactNets[o[1]].openCard,e.getById(n.id).then(function(){console.log("ELEMENT",arguments[0]),e.contactNets[o[1]].contactNetInfo=arguments[0]})),t.$apply())})}n.on("click",a)}var n={restrict:"EA",scope:{contactNet:"=cnContactNetInfo"},link:t};return n}e.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnOpenContactNets",e)}(),function(){"use strict";function e(e){function t(t,n,o,c){function a(){"button"!==arguments[0].target.localName&&angular.forEach(e.rules,function(){var n=arguments;n[0].id==t.rule.id&&(e.rules[n[1]].downloadedData?e.rules[n[1]].openCard=!e.rules[n[1]].openCard:(e.rules[n[1]].openCard=!e.rules[n[1]].openCard,e.getById().then(function(){e.rules[n[1]]=arguments[0][0],e.rules[n[1]].downloadedData=!0,e.rules[n[1]].openCard=!e.rules[n[1]].openCard,console.log(e.rules,e.rules[n[1]])})),t.$apply())})}n.on("click",a)}var n={restrict:"EA",scope:{rule:"=cnRuleInfo"},link:t};return n}e.$inject=["$cnRules"],angular.module("virtual-center").directive("cnOpenRules",e)}(),function(){"use strict";function e(e,t){function n(e,t,n,o){function c(){a.scrollTop&&a.scrollTop>240?t[0].classList.contains("filterSearchExpanded")||t[0].classList.add("filterSearchExpanded"):t[0].classList.contains("filterSearchExpanded")&&t[0].classList.remove("filterSearchExpanded")}var a=document.querySelector('[role="main"]');a.addEventListener("scroll",c),e.$on("$destroy",function(){a.removeEventListener("scroll",c)})}var o={restrict:"EA",scope:{},link:n};return o}e.$inject=["$timeout","$document"],angular.module("virtual-center").directive("cnScroll",e)}(),function(){"use strict";function e(e){function t(t,n,o,c){e(function(){t.downloadedData=!0},3e3)}function n(e){}n.$inject=["$scope"];var o={restrict:"EA",scope:{downloadedData:"="},link:t,templateUrl:"/contactNetConfig/modules/repos/directives/cualifications/cualifications.html",controller:n};return o}e.$inject=["$timeout"],angular.module("virtual-center").directive("cnRepoCualification",e)}(),function(){"use strict";function e(e,t){function n(e,t,n,o){function c(){console.log(n)}c()}var o={restrict:"EA",scope:{rule:"=cnRule",vocabulary:"=cnVocabulary"},templateUrl:"/contactNetConfig/modules/rules/directives/categorization/categorization.html",link:n};return o}e.$inject=["$cnLanguages","$filter"],angular.module("virtual-center").directive("cnCategorization",e)}(),function(){"use strict";function e(e,t,n){function o(){var e=t.defer(),o=arguments;return n(function(){var t=[];angular.forEach(u.bbdd[o[0]],function(){t.push(arguments[0])}),e.resolve(t)},r(200,500)),e.promise}function c(){var e=t.defer(),o=arguments;return n(function(){e.resolve(u.bbdd[o[0]][o[1]]||!1)},r(200,500)),e.promise}function a(){var e=t.defer(),o=arguments;return n(function(){if(void 0===o[2]){var t=r(1e3,9999);o[1].id=t,e.resolve(u.bbdd[o[0]][t]=o[1])}else e.resolve(u.bbdd[o[0]][o[2]]=o[1])},r(300,500)),e.promise}function r(){return Math.floor(Math.random()*arguments[1])+arguments[0]}function i(){for(var t=0;t<s.length;t++)!function(t){var n=arguments;e.get("/contactNetConfig/modules/core/services/mocks/json/"+n[0]+".json").success(function(){u.bbdd[n[0]]=arguments[0]})}(s[t])}var s=["menu","listContactNets","contactNetId","channels","rules","rulesId","languages","channels","channelsId"],u=this;return u.bbdd={},u.get=o,u.getById=c,u.set=a,i(),u}e.$inject=["$http","$q","$timeout"],angular.module("virtual-center").service("$cnMocks",e)}(),function(){"use strict";function e(e){function t(e,t,n,o){}function n(e){function t(){arguments[0].rules.push({evaluationMode:"1",type:"21",data:[{Category_Id:"2",Description:"Alta Orange"}],multiRule:!0})}e.addCategorization=t}n.$inject=["$scope"];var o={restrict:"EA",scope:{routingRule:"=cnRoutingRules",channelId:"=cnChannelId",vocabulary:"=cnVocabulary"},link:t,templateUrl:"/contactNetConfig/modules/rules/directives/routingRules/routingRules.html",controller:n};return o}e.$inject=["$cnRules"],angular.module("virtual-center").directive("cnRoutingRules",e)}(),function(){"use strict";function e(e,t){function n(n,o,c,a){function r(){var e=angular.copy(arguments[0]);e.selected?(delete e.selected,n.rule.rules[s].data.push(e)):angular.forEach(n.rule.rules[s].data,function(){arguments[0].Language_Id==e.Language_Id&&n.rule.rules[s].data.splice(arguments[1],1)})}function i(){e.get().then(function(){n.languages=arguments[0],angular.forEach(n.languages,function(){var e=angular.copy(t("filter")(n.rule.rules[s].data,{Language_Id:arguments[0].Language_Id}));e.length?n.languages[arguments[1]].selected=!0:n.languages[arguments[1]].selected=!1})}),angular.forEach(n.rule.rules,function(){20==arguments[0].type&&(s=arguments[1])}),s===!1&&(s=n.rule.rules.length,n.rule.rules.push({evaluationMode:"1",type:"20",data:[],multiRule:!0}))}n.languages=[],n.toggleLanguage=r;var s=!1;i()}var o={restrict:"EA",scope:{rule:"=cnRule"},templateUrl:"/contactNetConfig/modules/rules/directives/selectLanguages/selectLanguages.html",link:n};return o}e.$inject=["$cnLanguages","$filter"],angular.module("virtual-center").directive("cnSelectLanguages",e)}(),function(){"use strict";function e(e,t){function n(n,o,c,a){function r(){var e=[];angular.forEach(n.rule.destinations,function(){var n=angular.copy(t("filter")(u,{id:arguments[0]}));n.length&&(n[0].selected=!0,e.push(n[0]))}),angular.forEach(u,function(){~n.rule.destinations.indexOf(arguments[0].id)||e.push(arguments[0])}),n.contactNets=e}function i(){arguments[0].selected?n.rule.destinations.push(arguments[0].id):n.rule.destinations.splice(n.rule.destinations.indexOf(arguments[0].id),1),r()}function s(){var e=(arguments,n.rule.destinations.indexOf(arguments[0].id));n.rule.destinations.splice(e,1),arguments[1]?n.rule.destinations.splice(e-1,0,arguments[0].id):n.rule.destinations.splice(e+1,0,arguments[0].id),r()}var u=[];n.contactNets=[],n.moveContactNet=s,n.selectCN=i,e.get().then(function(){u=arguments[0],r()})}var o={restrict:"EA",scope:{rule:"=cnRule",channelId:"=cnChannelId"},templateUrl:"/contactNetConfig/modules/rules/directives/selectOrderContactNet/selectOrderContactNet.html",link:n};return o}e.$inject=["$cnContactNets","$filter"],angular.module("virtual-center").directive("cnSelectOrderContactNet",e)}();