!function(){"use strict";angular.module("virtual-center",["ui.router","ngSanitize","ngAnimate","ngAria","ngMaterial"])}(),function(){"use strict";function e(e,n){var t=e.extendPalette("blue",{100:"#E0F2FA",200:"#AFDDF3",300:"#71C3E9",400:"#57B7E5",500:"#3CACE1",600:"#22A1DC",700:"#1E8DC2",800:"#1A7AA7",900:"#16678D",A100:"#AFDDF3",A200:"#3CACE1",A400:"#57B7E5",A700:"#1E8DC2"});e.definePalette("blueVC",t),e.theme("default").primaryPalette("grey").accentPalette("blueVC").warnPalette("red"),n.icon("add","/contactNetConfig/assets/icons/add.svg").icon("arrow_downward","/contactNetConfig/assets/icons/arrow_downward.svg").icon("arrow_upward","/contactNetConfig/assets/icons/arrow_upward.svg").icon("menu","/contactNetConfig/assets/icons/menu.svg").icon("more_vert","/contactNetConfig/assets/icons/more_vert.svg").icon("contactnets","/contactNetConfig/assets/icons/contactnets.svg").icon("channels","/contactNetConfig/assets/icons/channels.svg").icon("rules","/contactNetConfig/assets/icons/rules.svg").icon("twitter","/contactNetConfig/assets/icons/twitter.svg").icon("mail","/contactNetConfig/assets/icons/mail.svg").icon("message","/contactNetConfig/assets/icons/message.svg").icon("phone","/contactNetConfig/assets/icons/phone.svg").icon("shape","/contactNetConfig/assets/icons/shape.svg").icon("insert","/contactNetConfig/assets/icons/insert-drive-file.svg").icon("edit","/contactNetConfig/assets/icons/edit.svg").icon("search","/contactNetConfig/assets/icons/search.svg").icon("delete","/contactNetConfig/assets/icons/delete.svg")}e.$inject=["$mdThemingProvider","$mdIconProvider"],angular.module("virtual-center").config(e)}(),function(){"use strict";function e(e,n,t,c,a,o,r,i){function s(){var e=arguments;return function(){c(e[0]).toggle()}}n.toggleLeft=s("left"),n.menu={},n.cnNavigate=o,n.environment={},e.fab={isOpen:!1,trigger:{icon:"add",action:function(){}},actions:[]},n.isOpenLeft=function(){return c("left").isOpen()},a.get().then(function(){console.log("arguments",arguments[0]),n.menu=arguments[0]}),e.$on("$stateChangeSuccess",function(){switch(e.fab.isOpen=!1,e.fab.actions=[],arguments[1].url){case"/contactnets":n.selectedIndex=0,n.environment.actualSection="ContactNets";break;case"/channels":n.selectedIndex=1,n.environment.actualSection="Reglas";break;case"/rules":n.selectedIndex=2,n.environment.actualSection="Canales";break;case"/repos":n.selectedIndex=3,n.environment.actualSection="Repositorio"}})}e.$inject=["$rootScope","$scope","$timeout","$mdSidenav","$cnMenu","$cnNavigate","$location","$interval"],angular.module("virtual-center").controller("appController",e)}(),function(){"use strict";function e(e,n){e.state("contactnets",{"abstract":!0,templateUrl:"/contactNetConfig/layout.html"}).state("contactnets.contatNetConfig",{url:"/contactnets",templateUrl:"/contactNetConfig/modules/contactNets/contactNets.html",controller:"contactNetsController"}).state("contactnets.channels",{url:"/channels",templateUrl:"/contactNetConfig/modules/channels/channels.html",controller:"channelsController"}).state("contactnets.rules",{url:"/rules",templateUrl:"/contactNetConfig/modules/rules/rules.html",controller:"rulesController"}),n.otherwise("/contactnets")}e.$inject=["$stateProvider","$urlRouterProvider"],angular.module("virtual-center").config(e)}(),function(){"use strict";function e(e,n,t,c,a){function o(){c.channels.unshift({multimedia:"Nuevo Phone",downloadedData:!0,openCard:!0,multimediaId:(new Date).getTime(),channelId:1,configModificable:!1})}function r(){c.channels.unshift({multimedia:"Nuevo Chat",downloadedData:!0,openCard:!0,multimediaId:(new Date).getTime(),channelId:2,configModificable:!1})}function i(){c.channels.unshift({multimedia:"Nuevo Mail",downloadedData:!0,openCard:!0,multimediaId:(new Date).getTime(),channelId:3,configModificable:!1})}function s(){e.fab.isOpen=!0}function u(){console.log(arguments[0])}n.contactNets=[],n.$cnChannels=c,n.save=u,n.openFab=s,e.fab.trigger.action=function(){},e.fab.actions=[{icon:"phone",action:o},{icon:"message",action:r},{icon:"mail",action:i}],c.get().then(function(){})}e.$inject=["$rootScope","$scope","$cnContactNets","$cnChannels","$filter"],angular.module("virtual-center").controller("channelsController",e)}(),function(){"use strict";function e(e,n,t,c){n.contactNetsService=t,e.fab.trigger.action=c.createContactNet,t.get().then(function(){t.contactNets=arguments[0]})}e.$inject=["$rootScope","$scope","$cnContactNets","$cnCreateContactNet"],angular.module("virtual-center").controller("contactNetsController",e)}(),function(){"use strict";function e(e,n,t,c,a){function o(){arguments[0].routingRules.push({name:"nueva regla",openCard:!0,destinations:[],rules:[]})}function r(){console.log("ar"),c.rules.unshift({id:(new Date).getTime(),name:"Nuevo grupo de reglas",downloadedData:!0,openCard:!0,configModificable:!1,vocabulary:[],routingRules:[]})}function i(){console.log(arguments[0])}n.contactNets=[],n.$cnRules=c,e.fab.trigger.action=r,n.addNew=r,n.addRoutingRule=o,n.save=i,c.get().then(function(){})}e.$inject=["$rootScope","$scope","$cnContactNets","$cnRules","$filter"],angular.module("virtual-center").controller("rulesController",e)}(),function(){"use strict";function e(e,n){function t(){var t=e.defer();return n.get("channels").then(function(){t.resolve(arguments[0])}),t.promise}function c(){var t=e.defer();return n.get("channelsId").then(function(){t.resolve(arguments[0])}),t.promise}var a=this;return a.channels=[],a.get=t,a.getById=c,a}e.$inject=["$q","$cnMocks"],angular.module("virtual-center").service("$cnChannels",e)}(),function(){"use strict";function e(e,n,t){function c(){var n=e.defer();return t.get("/ivr/getcontactnets").then(function(){console.log("getcontactnets",arguments[0].data),n.resolve(arguments[0].data)}),n.promise}function a(){var n=e.defer();return console.log("ID Enviado",arguments[0]),t.post("/ivr/getcontactnetbyid",{id:arguments[0]}).then(function(){n.resolve(arguments[0].data)}),n.promise}function o(){var n=e.defer();return console.log("ID Enviado",arguments[0]),t.get("/ivr/getspeech/id/"+arguments[0]).then(function(){n.resolve(arguments[0].data)}),n.promise}var r=this;return r.contactNets=[],r.get=c,r.getById=a,r.getSpeech=o,r}e.$inject=["$q","$cnMocks","$http"],angular.module("virtual-center").service("$cnContactNets",e)}(),function(){"use strict";function e(e,n){function t(){var t=e.defer();return a?t.resolve(a):n.get("languages").then(function(){a=arguments[0],t.resolve(a)}),t.promise}var c=this,a=!1;return c.get=t,c}e.$inject=["$q","$cnMocks"],angular.module("virtual-center").service("$cnLanguages",e)}(),function(){"use strict";function e(e,n){function t(){var t=e.defer();return a?t.resolve(a):n.getById("menu","MENU").then(function(){a=arguments[0],t.resolve(a)}),t.promise}var c=this,a=!1;return c.get=t,c}e.$inject=["$q","$cnMocks"],angular.module("virtual-center").service("$cnMenu",e)}(),function(){"use strict";function e(e,n){function t(){var t=e.defer();return n.get("rules").then(function(){t.resolve(arguments[0])}),t.promise}function c(){var t=e.defer();return n.get("rulesId").then(function(){t.resolve(arguments[0])}),t.promise}var a=this;return a.rules=[],a.get=t,a.getById=c,a}e.$inject=["$q","$cnMocks"],angular.module("virtual-center").service("$cnRules",e)}(),function(){"use strict";function e(e){function n(e,n,t,c){}function t(e){}t.$inject=["$scope"];var c={restrict:"EA",scope:!1,link:n,templateUrl:"/contactNetConfig/modules/contactNets/directives/cnContactNetChatCardChannelConfiguration/cnContactNetChatCardChannelConfiguration.html",controller:t};return c}e.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnContactNetChatCardChannelConfiguration",e)}(),function(){"use strict";function e(e){function n(e,n,t,c){}function t(e){}t.$inject=["$scope"];var c={restrict:"EA",scope:!1,link:n,templateUrl:"/contactNetConfig/modules/contactNets/directives/cnContactNetMailCardChannelConfiguration/cnContactNetMailCardChannelConfiguration.html",controller:t};return c}e.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnContactNetMailCardChannelConfiguration",e)}(),function(){"use strict";function e(e){function n(e,n,t,c){}function t(e){}t.$inject=["$scope"];var c={restrict:"EA",scope:!1,link:n,templateUrl:"/contactNetConfig/modules/contactNets/directives/cnContactNetTwitterCardChannelConfiguration/cnContactNetTwitterCardChannelConfiguration.html",controller:t};return c}e.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnContactNetTwitterCardChannelConfiguration",e)}(),function(){"use strict";function e(e){function n(e,n,t,c){}function t(e){}t.$inject=["$scope"];var c={restrict:"EA",link:n,templateUrl:"/contactNetConfig/modules/contactNets/directives/cnContactNetVoiceCardChannelConfiguration/cnContactNetVoiceCardChannelConfiguration.html",controller:t};return c}e.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnContactNetVoiceCardChannelConfiguration",e)}(),function(){"use strict";function e(e,n){function t(e,n,t,c){function a(){cnCreateContactNet.createContactNet()}n.on("click",a)}var c={restrict:"EA",scope:{},link:t};return c}function n(e){function n(){console.log("lasldglasdg",e.contactNets),e.contactNets.splice(0,0,{id:t(1,50),description:"Nuevo ContactNet",queueType:"BOTH",isACD:1,openCard:!0,modificable:!0,channels:{1:1,2:2,3:3}}),e.getById().then(function(){e.contactNets[0].contactNetInfo=arguments[0]})}function t(){return Math.floor(Math.random()*arguments[1])+arguments[0]}var c=this;return c.createContactNet=n,c}e.$inject=["$cnContactNets","$cnCreateContactNet"],n.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnCreateContactNet",e).service("$cnCreateContactNet",n)}(),function(){"use strict";function e(e){function n(n,t,c,a){function o(){console.log("lasldglasdg",e.rules),e.rules.splice(0,0,{id:r(1,50),description:"Nueva Regla",openCard:!0,modificable:!0}),e.getById().then(function(){e.rules[0].RuleInfo=arguments[0]})}function r(){return Math.floor(Math.random()*arguments[1])+arguments[0]}t.on("click",o)}var t={restrict:"EA",scope:{},link:n};return t}e.$inject=["$cnRules"],angular.module("virtual-center").directive("cnCreateRule",e)}(),function(){"use strict";function e(e){function n(n,t,c,a){function o(){e.path(c.cnNavigate),n.$apply()}t.css("cursor","pointer"),t.on("click",o)}var t={restrict:"A",scope:{cnNavigate:"@"},link:n};return t}function n(e){function n(){arguments[0]&&e.path(arguments[0])}var t=this;t.path=n}e.$inject=["$cnNavigate"],n.$inject=["$location"],angular.module("virtual-center").directive("cnNavigate",e).service("$cnNavigate",n)}(),function(){"use strict";function e(e){function n(n,t,c,a){function o(){"button"!==arguments[0].target.localName&&angular.forEach(e.channels,function(){var t=arguments;t[0].channelId==n.channel.channelId&&(e.channels[t[1]].downloadedData?e.channels[t[1]].openCard=!e.channels[t[1]].openCard:(e.channels[t[1]].openCard=!e.channels[t[1]].openCard,e.getById().then(function(){e.channels[t[1]]=arguments[0][0],e.channels[t[1]].downloadedData=!0,e.channels[t[1]].openCard=!e.channels[t[1]].openCard,console.log(e.channels,e.channels[t[1]])})),n.$apply())})}t.on("click",o)}var t={restrict:"EA",scope:{channel:"=cnChannelInfo"},link:n};return t}e.$inject=["$cnChannels"],angular.module("virtual-center").directive("cnOpenChannels",e)}(),function(){"use strict";function e(e){function n(n,t,c,a){function o(){var t=n.contactNet;angular.forEach(e.contactNets,function(){var c=arguments;c[0].id==t.id&&(e.contactNets[c[1]].contactNetInfo?(e.contactNets[c[1]].contactNetInfo=null,e.contactNets[c[1]].openCard=!e.contactNets[c[1]].openCard):(e.contactNets[c[1]].openCard=!e.contactNets[c[1]].openCard,e.getById(t.id).then(function(){console.log("ELEMENT",arguments[0]),e.contactNets[c[1]].contactNetInfo=arguments[0]})),n.$apply())})}t.on("click",o)}var t={restrict:"EA",scope:{contactNet:"=cnContactNetInfo"},link:n};return t}e.$inject=["$cnContactNets"],angular.module("virtual-center").directive("cnOpenContactNets",e)}(),function(){"use strict";function e(e){function n(n,t,c,a){function o(){"button"!==arguments[0].target.localName&&angular.forEach(e.rules,function(){var t=arguments;t[0].id==n.rule.id&&(e.rules[t[1]].downloadedData?e.rules[t[1]].openCard=!e.rules[t[1]].openCard:(e.rules[t[1]].openCard=!e.rules[t[1]].openCard,e.getById().then(function(){e.rules[t[1]]=arguments[0][0],e.rules[t[1]].downloadedData=!0,e.rules[t[1]].openCard=!e.rules[t[1]].openCard,console.log(e.rules,e.rules[t[1]])})),n.$apply())})}t.on("click",o)}var t={restrict:"EA",scope:{rule:"=cnRuleInfo"},link:n};return t}e.$inject=["$cnRules"],angular.module("virtual-center").directive("cnOpenRules",e)}(),function(){"use strict";function e(e,n){function t(e,n,t,c){function a(){o.scrollTop&&o.scrollTop>240?n[0].classList.contains("filterSearchExpanded")||n[0].classList.add("filterSearchExpanded"):n[0].classList.contains("filterSearchExpanded")&&n[0].classList.remove("filterSearchExpanded")}var o=document.querySelector('[role="main"]');o.addEventListener("scroll",a),e.$on("$destroy",function(){o.removeEventListener("scroll",a)})}var c={restrict:"EA",scope:{},link:t};return c}e.$inject=["$timeout","$document"],angular.module("virtual-center").directive("cnScroll",e)}(),function(){"use strict";function e(e,n){function t(e,n,t,c){function a(){console.log(t)}a()}var c={restrict:"EA",scope:{rule:"=cnRule",vocabulary:"=cnVocabulary"},templateUrl:"modules/rules/directives/categorization/categorization.html",link:t};return c}e.$inject=["$cnLanguages","$filter"],angular.module("virtual-center").directive("cnCategorization",e)}(),function(){"use strict";function e(e){function n(e,n,t,c){}function t(e){function n(){arguments[0].rules.push({evaluationMode:"1",type:"21",data:[{Category_Id:"2",Description:"Alta Orange"}],multiRule:!0})}e.addCategorization=n}t.$inject=["$scope"];var c={restrict:"EA",scope:{routingRule:"=cnRoutingRules",channelId:"=cnChannelId",vocabulary:"=cnVocabulary"},link:n,templateUrl:"modules/rules/directives/routingRules/routingRules.html",controller:t};return c}e.$inject=["$cnRules"],angular.module("virtual-center").directive("cnRoutingRules",e)}(),function(){"use strict";function e(e,n){function t(t,c,a,o){function r(){var e=angular.copy(arguments[0]);e.selected?(delete e.selected,t.rule.rules[s].data.push(e)):angular.forEach(t.rule.rules[s].data,function(){arguments[0].Language_Id==e.Language_Id&&t.rule.rules[s].data.splice(arguments[1],1)})}function i(){e.get().then(function(){t.languages=arguments[0],angular.forEach(t.languages,function(){var e=angular.copy(n("filter")(t.rule.rules[s].data,{Language_Id:arguments[0].Language_Id}));e.length?t.languages[arguments[1]].selected=!0:t.languages[arguments[1]].selected=!1})}),angular.forEach(t.rule.rules,function(){20==arguments[0].type&&(s=arguments[1])}),s===!1&&(s=t.rule.rules.length,t.rule.rules.push({evaluationMode:"1",type:"20",data:[],multiRule:!0}))}t.languages=[],t.toggleLanguage=r;var s=!1;i()}var c={restrict:"EA",scope:{rule:"=cnRule"},templateUrl:"modules/rules/directives/selectLanguages/selectLanguages.html",link:t};return c}e.$inject=["$cnLanguages","$filter"],angular.module("virtual-center").directive("cnSelectLanguages",e)}(),function(){"use strict";function e(e,n){function t(t,c,a,o){function r(){var e=[];angular.forEach(t.rule.destinations,function(){var t=angular.copy(n("filter")(u,{id:arguments[0]}));t.length&&(t[0].selected=!0,e.push(t[0]))}),angular.forEach(u,function(){~t.rule.destinations.indexOf(arguments[0].id)||e.push(arguments[0])}),t.contactNets=e}function i(){arguments[0].selected?t.rule.destinations.push(arguments[0].id):t.rule.destinations.splice(t.rule.destinations.indexOf(arguments[0].id),1),r()}function s(){var e=(arguments,t.rule.destinations.indexOf(arguments[0].id));t.rule.destinations.splice(e,1),arguments[1]?t.rule.destinations.splice(e-1,0,arguments[0].id):t.rule.destinations.splice(e+1,0,arguments[0].id),r()}var u=[];t.contactNets=[],t.moveContactNet=s,t.selectCN=i,e.get().then(function(){u=arguments[0],r()})}var c={restrict:"EA",scope:{rule:"=cnRule",channelId:"=cnChannelId"},templateUrl:"modules/rules/directives/selectOrderContactNet/selectOrderContactNet.html",link:t};return c}e.$inject=["$cnContactNets","$filter"],angular.module("virtual-center").directive("cnSelectOrderContactNet",e)}(),function(){"use strict";function e(e,n,t){function c(){var e=n.defer(),c=arguments;return t(function(){var n=[];angular.forEach(u.bbdd[c[0]],function(){n.push(arguments[0])}),e.resolve(n)},r(200,500)),e.promise}function a(){var e=n.defer(),c=arguments;return t(function(){e.resolve(u.bbdd[c[0]][c[1]]||!1)},r(200,500)),e.promise}function o(){var e=n.defer(),c=arguments;return t(function(){if(void 0===c[2]){var n=r(1e3,9999);c[1].id=n,e.resolve(u.bbdd[c[0]][n]=c[1])}else e.resolve(u.bbdd[c[0]][c[2]]=c[1])},r(300,500)),e.promise}function r(){return Math.floor(Math.random()*arguments[1])+arguments[0]}function i(){for(var n=0;n<s.length;n++)!function(n){var t=arguments;e.get("/contactNetConfig/modules/core/services/mocks/json/"+t[0]+".json").success(function(){u.bbdd[t[0]]=arguments[0]})}(s[n])}var s=["menu","listContactNets","contactNetId","channels","rules","rulesId","languages","channels","channelsId"],u=this;return u.bbdd={},u.get=c,u.getById=a,u.set=o,i(),u}e.$inject=["$http","$q","$timeout"],angular.module("virtual-center").service("$cnMocks",e)}();